(* ::Package:: *)

BeginPackage["NeffConstraint`"];


(* ::Text:: *)
(*The purpose of this package is to define modules and constants used in the computation of the Subscript[\[CapitalDelta]N, eff] constraint on \[Kappa]*)


(* ::Subsubsection:: *)
(*Public Declarations*)


CosmoParams::usage = "Produce a replacement table (string to N) for parameters used in the computation of the \!\(\*SubscriptBox[\(\[CapitalDelta]N\), \(eff\)]\) constraint on \[Kappa]";
\[CapitalLambda]CDMrepl::usage = "Density parameters for \[CapitalLambda]CDM cosmology";

H::usage = "Hubble as a function of temperature";
aH::usage = "\!\(\*OverscriptBox[\(a\), \(.\)]\) as a function of temperature";

ne::usage = "electron number density as a function of temperature";
Z1::usage = "classical single particle partition function";
\[CapitalLambda]::usage = "Debeye energy of SM electrons as a function of temperature";

nD0::usage = "DM number density today as a function of temperature";
nDR::usage = "DM number density at recombination as a function of temperature";

NumIntegrand::usage = "integrand used in ESM Integral";
ESMIntegral::usage = "integral to compute energy transfer / interaction rates w electrons as a function of temperature";
InterpolateEtransRate::usage = "Interpolate over temperature to find energy transfer rate as a funtion of mass";
InterpolateTotEtrans::usage = "Interpolate over mass to find energy transfered to DS";

Compute\[CapitalDelta]NeffConstraint::usage = "Compute \[CapitalDelta]Neff constraint and produce contour plot of \[Kappa] bound in \!\(\*SubscriptBox[\(m\), \(D\)]\),\!\(\*SubscriptBox[\(f\), \(D\)]\) plane";


(* ::Section:: *)
(*Private*)


Begin["`Private`"];


CosmoParams[]:= Module[{Td,ad,Tdt,T0,aR,TR,h,eVm,c,\[Rho]critbaumanncm,\[Rho]critbaumannm,\[Rho]crit,H0tinv,H0linv,H0inv,H0,n0,nd,nr,mSMtot,me,\[Alpha],g,pth,kF,EF,EFd,Degen,\[Rho]DM0},

(*Cosmo Constants - temperatures and scale factors*)
Td = 5 10^5; (*[eV] annihilation temperature*)
ad =(2 10^9)^-1; (*[] scale factor (~(1/z)) at annihilation*)
Tdt = 2.5 10^-4; (*[eV] Temperature of the Universe today*)
T0 = 2.5 10^-4; (*[eV] Temperature of the Universe today*)
aR = (1100)^-1;(*[] scale factor ~ (1/z) at recombination*)
TR = (Tdt/aR); (*[eV] Temperature at recombination*)

(*Conversion*)
eVm = N[200 10^-15 10^6]; (*[eV m] = 1 follows from 1 = 200 MeV fm*)
c = 3 10^8; (*[m s^-1]*)

(*Critical Density*)
h= 0.67; (*baumann 1.2.64*)
\[Rho]critbaumanncm = 1.1 10^-5 h^2; (*[protons cm^-3]*) 
\[Rho]critbaumannm = \[Rho]critbaumanncm  (10^6); (*[protons m^-3]*)
\[Rho]crit = \[Rho]critbaumannm eVm^3; (*[protons eV^3]*)

(*Hubble*)
H0tinv = 4.4 10^17; (*s*)
H0linv = c H0tinv; (*m*)
H0inv = eVm^-1 H0linv; (*eV^-1*)
H0= (H0inv^-1); (*eV*) 

(*Number density*)
n0 = "\[CapitalOmega]b" \[Rho]crit /.\[CapitalLambda]CDMrepl;  (*[eV^3] proton / electron number density today*)
nd = n0 (Td/Tdt)^3; (*[eV^3] number density at decoupling*)
nr = n0 (TR/Tdt)^3; (*[eV^3] number density at recombination*)

(*SM parameters*)
mSMtot= me + 2000 me;
me = 5 10^5; (*[eV] electron mass*)
\[Alpha]=1/137;
g = 4; (*[] dofs in SM electron*)

(*Thermal Quantities*)
pth =( (me Tdt)/(2 \[Pi]))^(1/2); (*[eV] thermal de-broglie momentum*)
kF = N[(3 \[Pi]^2 n0)^(1/3)]; (*[eV] fermi momentum today*)
EF = kF^2/(2 me);
EFd = EF Td/Tdt; (*[eV]fermi energy at decoupling*)
Degen = EF/Tdt; (*Degeneracy of gas today*)

(*DM energy density*)
\[Rho]DM0= "\[CapitalOmega]c"/"\[CapitalOmega]b" n0 mSMtot/.\[CapitalLambda]CDMrepl;

{"Td"->Td,"ad"->ad,"Tdt"->Tdt,"T0"->T0,"aR"->aR,"TR"->TR,"eVm"->eVm,"c"->c,"h"->h,"\[Rho]crit"->\[Rho]crit,"H0"->H0,"n0"->n0,"nd"->nd,"nr"->nr,"me"->me,"\[Alpha]"->\[Alpha],"g"->g,"pth"->pth,"kF"->kF,"EF"->EF,"EFd"->EFd,"Degen"->Degen,"\[Rho]DM0"->\[Rho]DM0}
]


(* ::Text:: *)
(*Cosmo Constants - temperatures and scale factors*)


(*Td = 5 10^5; (*[eV] annihilation temperature*)
ad =(2 10^9)^-1; (*[] scale factor (~(1/z)) at annihilation*)
Tdt = 2.5 10^-4 (*[eV] Temperature of the Universe today*)
T0 = 2.5 10^-4 (*[eV] Temperature of the Universe today*)
aR = (1100)^-1;(*[] scale factor ~ (1/z) at recombination*)
TR = (Tdt/aR) (*[eV] Temperature at recombination*)*)


(* ::Text:: *)
(*Critical density*)


(*h= 0.67 (*baumann 1.2.64*)
\[Rho]critbaumanncm = 1.1 10^-5 h^2 (*[protons cm^-3]*) 
\[Rho]critbaumannm = \[Rho]critbaumanncm  (10^6) (*[protons m^-3]*)*)


(* ::Text:: *)
(*Conversion*)


(*eVm = N[200 10^-15 10^6] (*[eV m] = 1 follows from 1 = 200 MeV fm*)*)


(* ::Text:: *)
(*Hubble*)


(*H0tinv = 4.4 10^17; (*s*)
H0linv = 3 10^8 H0tinv; (*m*)
H0inv = eVm^-1 H0linv; (*eV^-1*)
H0= (H0inv^-1) (*eV*) *)


(* ::Text:: *)
(*Define hubble and scale speed*)


(*\[CapitalLambda]CDMrepl= {\[CapitalOmega]k ->0.01,\[CapitalOmega]r->9.4 10^-5, \[CapitalOmega]m->0.32,\[CapitalOmega]\[CapitalLambda]->0.68,\[CapitalOmega]b->0.05,\[CapitalOmega]c->0.27}; (*[] \[CapitalLambda]CDM density parameters*)
H[\[Beta]_] :=H0 (\[CapitalOmega]r a^-4+\[CapitalOmega]m a^-3+\[CapitalOmega]k a^-2 + \[CapitalOmega]\[CapitalLambda])^(1/2)/.\[CapitalLambda]CDMrepl/.a->(Tdt \[Beta])
aH[\[Beta]_] :=a H0 (\[CapitalOmega]r a^-4+\[CapitalOmega]m a^-3+\[CapitalOmega]k a^-2 + \[CapitalOmega]\[CapitalLambda])^(1/2)/.\[CapitalLambda]CDMrepl/.a->(Tdt \[Beta])*)


(*Density Parameters for Hubble*)
\[CapitalLambda]CDMrepl= {"\[CapitalOmega]k" ->0.01,"\[CapitalOmega]r"->9.4 10^-5, "\[CapitalOmega]m"->0.32,"\[CapitalOmega]\[CapitalLambda]"->0.68,"\[CapitalOmega]b"->0.05,"\[CapitalOmega]c"->0.27}; (*[] \[CapitalLambda]CDM density parameters*)
H[\[Beta]_] := "H0" ("\[CapitalOmega]r" "a"^-4+"\[CapitalOmega]m" "a"^-3+"\[CapitalOmega]k" "a"^-2 + "\[CapitalOmega]\[CapitalLambda]")^(1/2)/.\[CapitalLambda]CDMrepl/."a"->("Tdt" \[Beta])
aH[\[Beta]_] :="a" "H0" ("\[CapitalOmega]r" "a"^-4+"\[CapitalOmega]m" "a"^-3+"\[CapitalOmega]k" "a"^-2 + "\[CapitalOmega]\[CapitalLambda]")^(1/2)/.\[CapitalLambda]CDMrepl/."a"->("Tdt" \[Beta])


(* ::Text:: *)
(*Number density today*)


(*n0 = \[CapitalOmega]b \[Rho]critbaumannm eVm^3 /.\[CapitalLambda]CDMrepl  (*[eV^3] proton / electron number density today*)
ne[\[Beta]_]:= n0 (1/(\[Beta] Tdt))^3 (*[eV^3] number density as a function of temperature*)
nd = n0 (Td/Tdt)^3 (*[eV^3] number density at decoupling*)
nr = n0 ((Td/Tdt)^3) (*[eV^3] number density at decoupling*)*)


ne[\[Beta]_]:= "n0" (1/(\[Beta] "Tdt"))^3 (*[eV^3] number density as a function of temperature*)


(* ::Text:: *)
(*Thermal Quantities*)


(*me = 5 10^5; (*[eV] electron mass*)
\[Alpha]=1/137;
pth =( (me Tdt)/(2 \[Pi]))^(1/2); (*[eV] thermal de-broglie momentum*)
g = 4; (*[] dofs in SM electron*)
Z1[\[Beta]_] := (g pth^3)/n0 (1/(Tdt \[Beta]))^(-3/2)(*[] single particle classical partition function*)
kF = N[(3 \[Pi]^2 n0)^(1/3)] (*[eV] fermi momentum today*)
EF = kF^2/(2 me)
EFd = EF Td/Tdt (*[eV]fermi energy at decoupling*)
Degen = EF/Tdt (*Degeneracy of gas today - degeneracy is independent of time*)
*)


Z1[\[Beta]_] := ("g" "pth"^3)/"n0" (1/("Tdt" \[Beta]))^(-3/2)(*[] single particle classical partition function*)


(* ::Text:: *)
(*more number density*)


(*mSMtot= me + 2000 me*)
(*\[Rho]DM0= "\[CapitalOmega]c"/"\[CapitalOmega]b" "n0" "mSMtot"/.\[CapitalLambda]CDMrepl*)
nD0[fD_,mDMtot_] :=  "\[Rho]DM0"/mDMtot fD
nDR[fD_,mDMtot_] := 1/"aR"^3 nD0[fD,mDMtot]


(* ::Text:: *)
(*Debeye energy*)


\[CapitalLambda][\[Beta]_]:= 4 \[Pi] "\[Alpha]" (2\[Pi] "n0")/("me" "Tdt" ) (1/(\[Beta] "Tdt"))^2


(* ::Text:: *)
(*Determine interaction rate as a function of temperature ***** UNCOMMENT BEFORE USE*)


(*Integrate[Ett/(Ett+\[CapitalLambda])^2 ((ms + ESMt)^2+(ms+(Ett-ESMt))^2),Ett];
Simplify[%/.ms->(m^2+mD^2)/(2 mD)];
Integrand =Simplify[Simplify[(%/.Ett->(2 mD)/((ESMt+mD)^2/(ESMt^2-m^2)-1))-(%/.Ett->0)]];
NumIntegrand[mDt_,mt_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ,\[Xi]E_?NumberQ]:=2/\[Pi] (\[Alpha]^2 \[Kappa]^2)/mDt (E^(-\[Beta] ESMt + \[Beta] \[Mu])/aH[\[Beta]] Integrand /.\[Mu]->m - 1/\[Beta] Log[Qt]/.{\[CapitalLambda]->\[CapitalLambda][\[Beta]],Qt->Z1[\[Beta]]}/.ESMt->1/\[Beta] \[Xi]E + m/.\[Beta]->\[Xi]\[Beta]/m/.{m->mt,mD->mDt})
ESMIntegral[mD_,m_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ]:=NIntegrate[m/\[Xi]\[Beta] NumIntegrand[mD,m,\[Kappa],\[Xi]\[Beta],\[Xi]E],{\[Xi]E,0,\[Infinity]}](*extra factor comes from jacobian*)*)


(* ::Text:: *)
(*Image[CompressedData["*)
(*1:eJztnQV8VFezwN/7+tpSobRoC4VC4WuBAi2l0EKx4hQJUiyBBAKE4HGFGAlx*)
(*d3cX4u7u7i7r7r43b+9uAkkISTbZYL3/37Y/snv9nnPmzMyZmVXyD88o/Od/*)
(*/ud/VOcI/nfmmuZfKirXtM9+Kfjj3APV27ce3Lxx9IHazVs3Vf6Q/0Dw5QHB*)
(*f8sE24P/HoSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA*)
(*gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA*)
(*gICAgICAgIB4q+BzGXQa+SUYLC4fEPNQLEReSExRK4zCE/3NodOpLx+ZzOTx*)
(*GO0xbmHFbSg6X+L3AwEBAQHxhuBxaA2xty7c1XDObIITBcC7ikIfydqHZXeR*)
(*xToQvc7fPjKtoo/MHZYSbGpfpuWpA1r2yQ19eMGRMT018ZaXdINzunA0Sluy*)
(*uWlCVQ+RI/lbgoCYMYzejGDXiKS0WHude/qBpSgGR9z51fsGwOdQ0I35Ee4G*)
(*dwyz8LNxBi4N3Zof4BGQEBvkaqBjFd2InspO5IGmrCDPwPhIfydDQ/vEJuxs*)
(*XBrElAFIxfZS59SexDdguHwBXA6jNsAwPLuwjy7GUTidcTq2obkt6BH9DuC3*)
(*hFz67ZZZVAOKCR6Zx2ENJKg5p9f1koFBHqPKV8klpRZGgbQUCMnB7MqNzG5E*)
(*U1gzG//bw+7qR5b2Y8lUAuyZ7obdj6M7yTM85GQgS4ICitHAWyu3AD6Pjutr*)
(*Sne+uvZBPEbyx+eR+2oSLXWDarBUCqq1yFPv2hGdVNgkO3EJHaVx9k/C69BU*)
(*CqIx01H3xmmj7Ml2EueiOHRsX1dHG4zAHfEdDdPX1d4GJ7Ald6L3B0ZDgPRe*)
(*FcOgGjR/cCArsaKtHQcryaju6ibwpn4QTlOQvG1UVjt+lHTojXu4XcY4oBpB*)
(*B4jlYekNAxh0XXxBKxLPFO5T63b+aUxBL0mM80BATAgqXXeXvFV8K445Q4ES*)
(*rHDpybMuEpM/CNQ57fzmsFU+hsadfL8ZQM82+Olb8zLeWytRBDKFQ0YUeciu*)
(*mhWBwiX0lvoZ3DRIGRCMDdjWxCfyG/Y5lU9iweBi23O9TB6aZfUPDrKRdcG6*)
(*N7ad8KiWjNmDh2/Nj3QxsAqKDrVXVZA5o+1b1IfvLor2tLIIyWtoaciJjomI*)
(*riRI5FzvEV3R1w6duaDmEh4XYfvgoUNsSS+dx2KyuVxxNIfeKHllz8gqOGPk*)
(*l5hc4z0brirbRT975qx+2iisTCA72AwWhzfknSHmmfzlmFAKp0nydiD+zXRF*)
(*Xv/lwtOYVuy05AmpKsBMXX73+h3mWX0IBJpA44AtFRF9c8Xux3EwMvvFMRn1*)
(*Qcb6qrevXJaVvqWkrqGlqakt/Ny7fllWRto0Bcnkin0BALPw8ab56lnE16Ck*)
(*8LksZEV0WHYPY/JtR8KjIks8JxcofDYD3VpZXFxSVt3cP2XLueCiqEQsgc4d*)
(*5JN78j3U9h02zsZP8iwAHodJIeKIDMFO+LZ0W5Wjp60KcdN7gHRETVKYqZap*)
(*S5BvUAmKS+8pz33mFlmHodCo+NbcANV/Dmzaeu6ukW1MLZrCZHPY1K6itMTw*)
(*iEbKtM72HoCvD7PzcjV/Yh6cXt47bGmCpekdldeyTG/G0HqSncNyyzvIAIfF*)
(*4fPA3zmEfhiWTBsl8BEF0SUtnbhR2h6pxOrA05CUNsLIN0mvdD30y32LhAYE*)
(*jVrkbJlQ347jDjI5g/xhScWv89mh7Bffhpv5hKIny8rkwfFNP932qcDQhBoP*)
(*oync4on6HdkrstIKD1XVn3f5+zdk5WSkTRJ6KawpSkxYuo2+zp3rcjIy12+p*)
(*a2kMHUdb6basjMwVxeAGtliiF2IW6QqX36PolNlFnJ7Dg8+ioNL0Vi6Rd63C*)
(*0kV6M7snRv28lk/pAGnUIhWATcHjs42Wf73gglNJDxyDxeKEHwy6yl1m8YOY*)
(*Xvp0roBd8mTjPLlo+KxLFC4DX2i2YfmqdSZ5L0ZDwdiM66osKi4a8ykur2xE*)
(*DnX3KQgULg3TlGT1xLMIQSDAayKNLh86+/hZpzjGIR6pvzz06U29wCrcVPuo*)
(*YKjCd2YHPr1rElGHn/pOI6H3lXjaqZ17ZGGmfGjTkau+Nd0NhVnhbqWiMY3H*)
(*xlTHGl78/YeDim5lwwKL1JqRHuuW2j+d07374Evdrj0yM7fXOXPwlyM6PuVw*)
(*FvgtrtjxzDkN08QmwVSA2tuBxOEZqCLvZ0W1oEueXh943zE8tQU78g21RRpG*)
(*FpUPjJraUMsc99tHpXYRR37ZEnj8t1vG0U0YziAH2dqOItPoDaHu6W09z21p*)
(*DX5/3veJbcXO3BTJYRAb/KVX/qkb1Smypwm6PJWAzzX9ceXXZ62z2/rRL7p8*)
(*tbf8d0rhTQTmFNsdl07E1/vJLJ6/VSe+F44eOg4Og+6I097xp3UZgwMJlLcC*)
(*dp2X1Ak1n/J+yvSNqC2ee5edsslFUEHzFrsnzkTPJ7MBTqaRWcDYVY+t3scW*)
(*zN1pWoRjjDwdtz3gH5M8MmNa5jF2o92+uVfCe2dbooDuEExHY2MHgcEf8SWf*)
(*LmjV44DFE1mibSYVKAAd25HpcM+7nMzkAwCPOlDrr7R3zbb70V1TvDQeBV6f*)
(*7PLUM68XT2GzaVOba3KIPWXxruZ+xd0Ege5An8YElY9tjjPR+Oe8XVZ3T31O*)
(*cmZhB57UnpseZvusTfgmefjmVA/9838fO3Tm6CXL1E7QqkLrLkyK9gqroYp/*)
(*uncfbkeiutRtTaechuaynKSs2m4sA2y0jHqRA6UWzQenKDw+H1PubR2QVNKD*)
(*6C3L9dc+KX1P0yyqAoZ/4aBvCX8cXlDaP8pjD7QHCaZxUXUo1ovvemIf/C5j*)
(*7A86UARH5vL4rNZIA+e48l7icF8j5htvM48q6CdLovvgM3U3bNQIbMbSXxyt*)
(*PeDc8oU7DTMGyCObGLcz5Ip5DorEevkgr4KS9Wjp53NuhPWPWuvDZ+bqnA/s*)
(*nIZ1A2IWIBdZ7JB+ElyLpE9fniCi5Vduf/ysTzCAsnsS7b0zG/rxTB7QGmSW*)
(*0EdijJo4oOMVl85bppqMFA16xO5uPA/0fzS6qgZ30dnTm2Rw4YGXPt/n1fYa*)
(*rF6AQICMPQvAfxVDW04qUBjYlgj1r5Zu2m2aBzoXABqywlvhq+9+0U5FTeGa*)
(*eBREa7afR1oHkUrDdbdkukS0Tr4Th9hXmxXsm9mFp9HRLU3Z3nGdUzjVmGOg*)
(*agN1FfZKmeageHwuh80G7fJcfE/psyBbx+CE2DB326fmAdmNfT1Vae4qF86e*)
(*OHdP45G2gYljahPpX7n8j9EUev2w9G27zA4qD3xegvEdoKHaamKNjm09dF7N*)
(*JTpboNvmpka7GsocVjGProWzeVxWe4zKA1u/jEYsi8tnYDsbq0tAFTj0ibSR*)
(*g1tMBvjv2h40Vdh1GBVOx2yjMzpJwrNxSD0NOc5Xf115Udk2Kq1QsGXGM3ez*)
(*ewekjSNrYC9iT1qCzmqEZLbjJeFCY1fa/bLihnMxkvpiNMEkK/13yYoH0Z0E*)
(*4focUk8PngOap5q9dELbCDQxhp0au1/nfnLcs4EivFkWtn2ACRruKOkqT/Lp*)
(*bGhRwdsAKk1z6xXrZ9Nwn/Co7XlRYZGh0cXVUSqr12mEdRKY8ESVA/9dsnDx*)
(*0m+Xr1ix4pv5arH95FEzEEq2/oqvPr0a1EkRulZgMWqeNVSmoClwcCiK+DFc*)
(*w/CJCQ+WLzApm1WlF+AyMDXJ/gFRMcnVGBaFMqUWDPDYZHh1RpzTgz+XbFMO*)
(*Kaxsx4xjWQBYJFhRgJWVTzEKvAWAiihzk5v33U+qKc9X8/LYVFhzTkxYSPiz*)
(*xNyWFz5tHgVW6X1/76L5Xy1etmLF8m9/2nnoceqw4OJS0K1FCXGFPcLBgsug*)
(*wJtr65rgdC6xp8BJ8c9F8+cLd1q2aZ+USdZUVhuPgo9tCDNQ2HbocWznyJcs*)
(*uGUGjYwnUAgYPIlEprF4AMBl04hYNHwAjYKjiSTKv3Q2yW2LunHkjLR+XCP2*)
(*hSrO53HYdCIaicYSKHQmiODpEdBIApnOAVsYudhGwyEoo6ppAE+jsQUbs1jg*)
(*RnVBWkFZeR0E8N9CwQQeC2A3+ak6xRZ3EYXNiM9lM8lYBBw8MmPoyEQsEkNm*)
(*cF4sYumOuG8aVdJFmMHaGTa+JiU6KjwkvTHHce93Zy2z+0kvpBM1/+m6b76U*)
(*8azDCmUYIl7XpwpH4YDmVjSFwxOjy7Z4HJ7/6S7LcqLQOssqsTFIx7AELYnP*)
(*RGFYb+86z38VXZE3Nl8wfdYmrjyhNgbcv2UdXwvDkTsiHm787vMLbpVYGo9H*)
(*xyEH+vueQ2TwRguJWsdt8z//46FXSnZBUXa87fVftVPQIl1lZg0CYBbpbfxS*)
(*LYs0S81KIExgBQ5X5Z2LECQcotjx/A8//WKWNyW/MsAXDLB0Ch4FQ+KpTBZn*)
(*3PVoAsWHw6RSRSqaYNJa53vvpxU7lBIHhP2NR0PVPLO8rxZYhaaSUe2FEWZy*)
(*1nloPg0Fr45K6uSyKDjE80c+gECRhs3SLExLtPmd/VdCO7g0RHOhl/FjJfm/*)
(*9l/zqqbxueBI83wnGBJNFt+HQmhJfCq/e498YO04rUfwPoGX3ul43/2L6ElW*)
(*O/7XeXX/SrgY2gAsRUfTztLcxierunvEiuvxTF4CuKTyALvIohbkFNeNoPMt*)
(*zMKLWjDT86CBoLKsZDV8czqRRHyR49/rF/+kGtmJY774vd7tr28X/H7bKS4j*)
(*vygnwUFxu05CD0HYYMRsCqjYG4s+/0jGMjEnv7A4JVBTSsajjiZynPybG9Xb*)
(*BLvOW2qXgp3Y7nhExuOtx7T86gSKLTDIK7ddtfSURZ7IgTIxrd7HF8/dpZfQ*)
(*2odAo/szjf+6FdFJHW3nItRGJTZQOWLrr+x6+/1zZaP7Z6Np8dnU+hDFNUdN*)
(*snCCi+VQYbFa8xZKh3XPjkLExHfFPj218bx1HgbU3QAmpjnGRHqHUnAzDXxN*)
(*PGJProvyr+d8Cru78rw8S18d98YldKRYPti6yyypviwhIKISRSTgcUgUlsqW*)
(*yEMit2daX9u7/aRF/jTXh/3bgGU+OfX7QQXrzC5x/Ec8JolEIZPJVIEiMmJ2*)
(*9gqBMghw6F1FYWG5DbDJo9+ZrXFeYVlV/eRpmppBG56P/JYrFsntWBYfAJCx*)
(*iqt/Ug1oxox2oKxcuEsrorYTJujy2eZ/3w1rxI42rxPrY1MaiMxJxiDQgTJ3*)
(*ziXPml44Go1u8JP707SQxBp1INZAVkQRnDdtQwfEzGDXeJw8ri62O55d7Xbo*)
(*v9vVIzvwwnkGIkp+xQ692D7i5N41VLzi0i+XqSXDKSwwYrfd/45HIxkcNFnY*)
(*xi6S0JcyEC6z/HEqhim+As5tcdr32Qn/PrF3nAyBdoJK1v/5m53WFeBIzGMQ*)
(*K52kFuy2r5kNoy2fgW1KsJKWtUzqF4qPQTahO9Xs3PrN95/1D52PCivz1Frz*)
(*8z2vrET7oIYJhAOlN9/t3rKFf1y6/zi4GoalSbaf0XvyXW8f3HxIN7brvYxU*)
(*5FKROAKOIrl7wxfaXti5/7xBXD1OAqFZ5M7SVhiKPJ7Q4LHp9BdhJhMgED4C*)
(*pXj6luZBZIr6r6suWmT3CU1c7Aq7n1fccClGjHGgfP3dg6h2HAPs8p3Byt51*)
(*aNDgxcY1d5OEvhR49I0f9RN6JouArrb79YtPT3jWk5lgJgFalo5aKk5oOiV0*)
(*NiEY4D2wio2/Pe3TxH6bY9LeZ8iFFjtkjINqxHXHN7hsXrnwRnCzaIEKPkv7*)
(*h/UaoZ2EyY1mQgfKZ9eCuoYC8llENFkYs0JIN7MvJpAIZHJnmMLCI7Z5CCxd*)
(*fC2WhwiSnrPHq13c/SaDy8Bn6Cyav0i/COw1fBa5yf/m10uMimch/RGHjCgP*)
(*09fwKUPRhgQFm9iTYnH+vz/di+0dnkVS4WWeyvO+OnBFxb2INMHQRINV+T6S*)
(*2qIQXNXbWJbkZqh45XGY5KI/OMhqf52jP+4641lJfx87MJ9QlRATHRCWVdMl*)
(*mdh+RkOw7MH1Bx96lPRLItQX4AlG4zc8F0ema2xafsw4sYcofEDt3ge/P2s1*)
(*JF1EgA6UpV9e9hpyoAyySRiR34SYbeNchMLiyOSuyPsrjlundCOp/In6fPOQ*)
(*A2VIKQEoSAxLePtNHo8je1g0EplcYLp+zsPoPtwUhiIIyYNM1dwmax3TihHz*)
(*8eOTVFZ/c9K8AE4WrhEut1y/9KZrJba1IKeNNHHqrhrHbQvmHnerJjKHJJio*)
(*AbFqXR54VhGYNBIJkaS1ZJ9leh8az5iGWZRPTHz47ZcmZWLvOPFR2dRWz4tz*)
(*F8iEIcBL5lD7YzW/WfwwDsHqLsgSK1JkEgTSpDrS0CSqAUMXTLyYOHhViE1m*)
(*N6oh9P7mH351faEPgQLl3pIfD1vm4SZ63Cx0U4TRtd9P+TRz+TwOpjHJ6sFv*)
(*R2yK4Xhse1UpbMbSEN8Y9fTct5uPGCTPipXxjcKFFfg+1jV84hmXnZdX3Qaf*)
(*gvI9OZ2xCn//su6ycUoLcfKN3w3qvX5bveS2fx1aOKWAxSn8sOdRZGdvVV4F*)
(*nCaKChA6UP62K3huDxd1a3a9p7pPOZJCJZERqXqrjpjHt8GxjInkIyr25uK5*)
(*SzUzcMznBxJujEx4YJCIYnCZJFKl6+FPrwe2Y3DTimaDmCGdEdf33XXI7iKI*)
(*+/T59R7HVlxxLEaAhjJEus7Or0/YZCEqfY2jWnETpllp8T6+5ItdZsWjLajY*)
(*AvuzdwM6yGw+wOfX2W1apZeKY3CmN/UCWMX6Gz9XyRIvP+tkCDSUdOOtC65H*)
(*oQVaEItS6yu/caFMUCOpxtvgGUxSTRdg4Loy7G5reSVn5BUUFhXmpcdEOiu7*)
(*13DIA6WOyts2O1QMiS4+E90YpfXPql/uxPTx+GzmqySayIHy2277MtA9y0Y3*)
(*RDy69tv+gNLejvJIn0LKTK+b3J5pdfW/P+z5x79OEqPtWwWy2OWWtppBfB2B*)
(*yWazOVyJGOUHMp+c/H3RQVX3ctjs5iJ6jRCyddeteBTUiKGDwWA+135YfC+w*)
(*oSvT0q0QhRcuCmgPOLdq0a6xESi4YleZh/6NGBpPIBUanLev14vtJzEnfMiU*)
(*TN2lX8y5HtY/SliQOyNVjpvlE9m8QYCPTrj95UmfNsb4q15mDz6H0ZFpYZkx*)
(*lQX+swOXhGxKdPIoRb6xKxC8/lrvk7tuO2R2TyNvNReXb3n5gXdRTXGUk22I*)
(*p+6+Uw6RIdo6z9owr7Kd4cpC/byMrvz81ZwP9t00tXVydXYVfp6on965YvHq*)
(*B+G9In/BQPC5Lx/GwhjTX1TKaXDY/+nlaMlGYfM5pM44Xal7oc3tRUEWxl4u*)
(*j/aedExONNBLxkjILc+lIEpdLq6e+8lnX86fv0D4+WrFht9UEhEClYjUUxrw*)
(*SE45sLwb0VKcEO7nH52aG2l/fbeyW3yAffqrWhGlL99Vf8uf5nlE4YIaJrI2*)
(*0uXuocfe6TEekU0zdqew+ku8lHYs2fK3XjpS8v2XiahN89A4v/+A9G3zPMTw*)
(*t/TusoqyzOrZn9+jCh2uaWvox9XhyVSBQJHIMSllbtJ7vv/xqllym2SnO28S*)
(*gN0RrS5nGl9akeJr7h1ic2Wjqme4rbpTDgwPq4gM9Hly9bfFcz/cc9XA0mG4*)
(*yxtrntv7/Tdrbvu34IUBavCIK8uUI9uIrzSTsFoSfT0s1f5eOOfD9ec1bB2d*)
(*RMdxNdeW27f5m/lHLStFSwpYhXoL/nKqpktkQTrA5yFSTJWV5GUunDsvd11F*)
(*TUX4UVXQNAlM7xz5AnksQonDbftC3PPlAQCHgctzVFZWlL9w/oL0jbtD+6oo*)
(*qzy8JvuP9HUFl6KJ7c5cGq4uUvfhg+sy5y9dklMc2l1FVen+7av/SMvfM0wa*)
(*6yfmc0l9NUnOeqEtb8qbSSuz+fOYqntZ37Si4wEOnYRF4/FkMoXKYFAJKBQG*)
(*hSYxXu3c47MZdDqFiEGhkHgSlUobhkLGY1FINEVkDB2kZGkuPu3TRKM2BvkU*)
(*UqcXqMRDBl2cs8tDwo4UgM+i4NEoPIFCoVIZdAoOgcRicBJaLSU8AY9NI6CR*)
(*I0FjsKI8RwCfy6TgCXgskUykMgVPksniCJ46DIbGkWivXO4peElkXG//8Po9*)
(*wUFYNAIGKwx2mPEcjo+pD9U/9eEPu8/61c6CggLwOPSO9KcKd04ohNYN5yyk*)
(*w4qDbPU09FyCQ+PSChqQ05/nswiwtrqSgsKCMZ/Sxh4k2CHoXRleNkY6+pbO*)
(*zj4JpS0oUS8ldOaGGD/Q1jJy8AkODvV3N9XUcwov7J7agi1Oa4T8kQ0fHFT3*)
(*KEO8NwrKoNAejMdj8TgilURj0kloHBoj+DcLzJEv7PJYNNjlKWO6PApNFrRB*)
(*sBFS8vRWnfeqwBIbwwKLiPRxOhTAZYIFwvCCsQNLpDw/Do1KJmAxSCRhWII0*)
(*Oe9doZ9F5aBSrWK7uDPXUnhMErbB98Jnc3dYFZLIJPBDIqDbY7T3LN9jlDsk*)
(*U7hMXIHFGf3U0WYegM8mwjuj7s9b9O39qAHRvuDueHh7mq3sKr2MSaYUYMUL*)
(*eFuC8Ymla065VjzfHdw/z1vn5AX/lnGeErm/4pn9bfcaMdMMSgZygfl2adAd*)
(*L06Y6mgAISP+LYHLYtZY/vUwKDfWxjmtizrdzDwAOlT6w92eEnfNj75NSd2y*)
(*OKfnjz7nFC7h5S0kdNmk9kxLuTVLfjv6JBMugcONA7bKV+PBxatuZWCeSx62*)
(*IdlaU+meSWRhXUNdXW1LP356SXpECMY6Eg6LeQksjsxgcolV4eHRkRktRHAY*)
(*pL9Yq8un1kfc1jHXf1aHoQgg10aFpeUWTtHBDks3ktq2cP1Vi9S29y4p5th+*)
(*Ic6+zDr7v1UD0qLt3NLaCDOa6PTHXDnmmJ7jahvUgJPIRI/PJaaqff7xJ9p5*)
(*z1+xYJLW6nbyw7lL7qWCAcd8Nq054PJB0eLPUXDp+FzjP75YKOXbNfInLg1V*)
(*7SdnVznp5fHpmGpv2SXLfzAuHLkuHKAhOtPNlBLGC0EGmOiWVOfbd6PET3gx*)
(*Y0B3vJxNtNju+NkG4NIJFBKFSaOzZ2C1BkhJSsu+MJawax5iBMz+Eg+lHZ+u*)
(*3SMfXD87HhRKc5zh/euXnmb0AYM8WImXsuyJSyYJrTQOj8flztipAUwAMs/M*)
(*3dcho4P50l49KWrqxqreOZU5nj6xqcVdoL5Im5qNgVzuKr131byj6gGV8PdJ*)
(*QZkxgi4vUG4oTCqNzZvZVIfPIhOJFDqNNnP9e+jKWOVPv/9ozq0E3ItzsOnF*)
(*T3/9+LPVBrkMoT+13PHgaY+2l94on0lq8jj95YKfLCt5wkNxSd3dgokEh0os*)
(*d9eJnrzwEBPfHaX249I1D5NQALg/m4brRbIHeVREV9pT5+px59pgvFqc4xWp*)
(*gOYZ3PW06Iy4vv+e4zTc8a+Fmc+gAXaxwcbPlDNJkrgciJfho+tD9aQ+XPLb*)
(*38aZknQE8tm47urMZ35BSalR3rp37p/XTuwU9B1UuZPKse3nH8R1Tkuf5lLg*)
(*9YWp4cH+wUkF9f2TFv2gN0UZ3pSWumUZUdFFGBk3h8i3UX9i6JzRUh7tHJGU*)
(*3DCAJhCJU1txz2mNkj+y8YMN1yzS2987BWXmSEzXl6DRAOCx2z2PzZlzKrDz*)
(*+UH5HHqZ5Y7PV172axUMnQL9pN7r1CLD4peaAMCmdITf+PKrJdo5YHPjMUht*)
(*YZo+4DjP53NIU0jrzSL2Jepu/3qVdDAYKwDQsf15Llb5FPCquGzCq0IFABq8*)
(*Ospo97Ww16ujsGu9pKQ0fIr7KO/vVInT6HjgE5moV7jmAT6xrSA//9WfguLi*)
(*plkohfXeQOrItLy2Zt5P+5TDWySmoLDRtTFuVvq2qa0ETF3CE9nNW6Ruihwo*)
(*pMZo3QvnT9+LFt/lyOorDLDQN3BOakDRmV05PlExwRWTpCwDeCwyoiknwubh*)
(*hR07j5zSDyrpE8oAQrXvDf2npmntDC6FQKP0Fcak5Oc1EackUAaEBq9vT+lG*)
(*1qLf3173PgHwOf2Rsp9+/Jt1JW/oCy6m0k9p90k1nzIsOM8AOPSOCIWFF8IR*)
(*L+3MoWFTHn3/2ZfHDWML8nOz4nyeXNthVjpq3fSE8CiIEru/5y9ZruSdm5+X*)
(*mRRgr3lZObbvuYPhVftxcB0pjvJbdDJeZ/U6aoHZn8fUPMr73+sa0lxk0KU5*)
(*O93Hd6QAfHxTdlbWqz/ZuXnl/e/dYliJwYJXeKvv/WDZ7yct8/ESOia1K9vi*)
(*0f0LxnEtdB4AIMrslW4fHHKgCLouqizU6M7hXbJKeiaWps7eQWVDQoHHYtFI*)
(*L0NjioIV0JXBKreu37TL6BQcdJDbnhwYHR5eP4VFVoKJIJ1AxHflBarYursW*)
(*D7CoiOZU63Pnbl3R80vMz89JCjJTfGTpndcxtZBOcrWnzP7V//urgnVWF1QW*)
(*8Z2AzyWlqn36fx8eu+/g7OTs7OTi6h2TWdYAQ5LAXKfCLdjUOo+TX+pkveQF*)
(*5zKEDpT5J5wrMFgMorc+3uiQevLUB3k+HV3tI7vwm+814/uxWGR3Q7rbrTOe*)
(*DVMYr6mw8hC99bKhs+BAfhXYrEfbpA0Dq5G0ia6vurra3d3d9m3F2dmZx5t4*)
(*asgnxd/5cK5lxfi/AjzOJIg8sWw2OzIycjZuQfB4GxoaRFfDYrFKS0tn4yxi*)
(*4erqmp+fP4U2RGxJtJReuHDTwUeSSrrCQ1T6qcsdv2CU2gu+VpED5YLQgQKu*)
(*fy5OjPaNyOvEUqg0Oh1Mmzu8YIPLwtVG6V69LavxrAZLJBKxsLaCQC1Dy6ex*)
(*zbRBVne6/rUdvx2TtY3ITH8W5GLt4hdb2UeeooWdS0K01xUVVnUM4Dl8QJjg*)
(*k0yhUuhMtqB1sJl0Co3BnGrEQ2+S6sktn609ZxDfIImkK68JQeMPDg5+061y*)
(*tuDzJxoAAR674unKj+ac8W9nDMFksbkj3Tw8JjHj6fyvLMvHtgE+i9zocXre*)
(*/J8sK7kAAHBohCafh6DhTKD10DAt3ZPaPJn47ki1H7/5/mESUlgcCdmT/tS0*)
(*CHTasJnEnnY82Od4DCKsMimjfXT/oyIqfI3W/uFdL8ZrniED8cqbzltEtWBe*)
(*9jmOoLCw0MTEROdtxcDAYDKBAjCydL7e9LhkZhNCwVDv4eExG7cgeLwVFUPi*)
(*TtBas7KyZuMsYmFkZJScnDz5Q6H3l7gqbf/f1TvBpCszerzPQVd6aB7fdlox*)
(*pkNY1KM7y/zh/XMiBwqlOSk4wN63HD9ugVcAXux8V+Pag8gmqnANHJ9Hqg2N*)
(*jw/MFogieJHJrYPbL2nGt9A5bDaLKRwSpu7NFxxL6P6feVAjrsT1/J6V/7vv*)
(*obtkkq68JgSN38nJ6U23ytliQoEimHC2e/790ZzDHh2v3IrHJOU9+f4r45Kx*)
(*+7IpnWE35n21WDtH1Dv4fB6BwOIP8plkeLK5a/WEI+8gmGypL1H3j69XSoeI*)
(*ki3xeTyBGi5oOEwcsjzAXFjQgk3oSfW49rtd+Wg7ikCg+Bit3er1GgUKn5D2*)
(*aOspi6hm9ET3JehJjLebSW4TIMYrfnLEqna8AD6AR6pyvysldeZVn9NnL2k4*)
(*lQw5UQTdapZuQfCQhy4IAASz3lk6i1gILmPyFiT0yP/f4s1HDCWVdIXRkW4u*)
(*/89+ObcycB0FD1bs8PDhyZuhBS3d7fn+Zq6Oat4i29fLYCoDlJUVFX2rcACt*)
(*o7C0KLtmYKCuqb66Q3AgWIHhzdun7gfXvk6L8jgIPfKb/vPDu5Z0RdAswQoq*)
(*7ykT3jmf2x91+ZOPVhgVvVrq8Nm0Fp8L867GjPG2cum4VN3V8xYqxL2I+AVL*)
(*ObApyCIn1aDOybRasBif3YnFK7Y71o46OZcMb47RdSikcHkMXH9TgoP8OoXA*)
(*JsrIcD0usSfN8/4m5eTX6QAG6CV2h3/WC6mEv8fWXKDL//ScE77tr3h5AJdJ*)
(*o0wInTnuhBgCjFfPc1bc9PGPe+SDJLVkGMDUhGmqyV31LCcLVJLOTNvrF8/L*)
(*uiVn5WUnONg91lI/o53QOu78h9wSqyN9+bC0XWC8/9M7eua2Wb2C+aAAUK1g*)
(*tMU/UdVScSseWojGxdWmxydnlLzuwEJcgc35ncu++Fvdv+q9iml8f+Fzyalq*)
(*n3z48d24iVyEXCY+/dEXf7k2jP6WQcg1/n3eQinfkcUt+CxCS9zTcxrxONGX*)
(*PCaxNebR7RumWWPDuIQRKFcWLVtjVMgYuT+pLctX/ap3PRdUWGCtOZ6q62R9*)
(*64iUkdmw2dj2OJerW5yqX+/qXV6jz8XN6h65/aT3tmZmre32j+RCJZUXRWKA*)
(*VbQY5CmWenxL4SCrA3SPfLD09xMWEvPIDwJMWEmIi6WhU3x+emSgnYGGtukD*)
(*laeecSHRVR1F/mrHf/nxD2k9n7y2MYZaVnfmE3llGdX4djanMzMlNT6hjT3I*)
(*4Q6yheM2wMc2JjmamdmGlbW1V6cHufqEp9UiGa97psBoCJE7tP4/m29aZb7b*)
(*HnlkibN9YiOS/HYIRRamroP0UjwSq9ZNxbWGOuYd4yucTZ3i0+M9lS7ctMjr*)
(*neCoAJ9eF+FoZ3jn8PL/fPChlJKza1jlqxZxgIVnwhXn3xhWUfgcZne2u7WF*)
(*ysnln34695SSg5ODE/ixs7PSuLH3l6XfbTPJGbaYcGmYErtjyxet3O35POod*)
(*YFPRZaE2ZqpX/pj7xYKdN4zshbs72Nuaayme+GXDfzfeDu8RjhwMdHOMyZ97*)
(*Xat5o8JIeeT+3NBHvz3Je93xEvy+6Hu/3nBO7BInKzexwufJ/Qu/frtBL7GH*)
(*MOWZKaHU7ZHiP5u+Xv8kC00VmVM64x9pqCjKnjorddm2GPu8FmxbnKaK/IUz*)
(*UicvXr6rFd3GnG6gvABmnsHKpTdjsJKV0wCb3h+nf/L0SamzF2Tv3r//8P79*)
(*B3fvKMqcO/2P9G23CcpcCeGzyX0lfjbu6bXdLbmBxlp2RbiJd3hbIbVnWMp9*)
(*v2jTwUdx3RJMHATwOAwKGU8gC5RDFpNJI5OwWBKFzuHxeWxcV1WSi47s3i3r*)
(*Vm06ets6qgoxJFfghVZ3VM4/iGqmD3LJaBQKgaH2Faakpya3iDYA080wwGVg*)
(*eCKNSmWBJdxff+TVQLrRqd8Xrj2nH9+Ae3cnEozGAF2nlFoYZUSqLES2o6Gm*)
(*/KVzp6QuSCvevQP2CPCjIHfu9KnTMi75SPLsZZZiFRkt/Vo3CcsaI954rNaw*)
(*h0qRnSPWS5Ay1M5ZlxJYHA6LXm3/99wDbq0TtAKAB5ZYplPJRCKRxmCxJiiu*)
(*AnDpsATN9crPF3CB7Y3JZFBJRBIJ3HcYJoNOIZNIlBEXCwBcJq6vI8nUpXFw*)
(*5JdssEwzRdBkqYJ+MLy7YH8qWQBDNCiyCd3JLjIbTYtH2+14pP684MdbjXKJ*)
(*r72R83HpelukrCIncc2PAqyNnm/yw3JF5zIUdcodQ7AXKVtv6YJbPk3Eobq0*)
(*AkHO6A9X/OmHzz7+9FpQ+3A+LPDr1mAZpehOHIUxA2kiaEDJSnN+1siT8GMF*)
(*ODRYotbCQ+qhdUg6HbTC0smYrmjVHV99fcK6mDLxSMWlYBuD9dwqKWDxbxa+*)
(*O81F5oBXq0Sv7zUhqoLyydo912YjRn5k4o6RmX3A2uh0Erq9MNTo4lE5edMc*)
(*YawxpjJASVlRwbcKN7Q5B1YcFhbkm9PDfuVRXzuMOrAKyryjav4V726MPLvR*)
(*S8EksrqfNKqZg8Nn97MHa7/7XTmkaYAw7J2g01G5licOW6T2TX3iKS6sfINF*)
(*n338rUYyjjV2LOJzeoPkLga0PRcpxGTdQxe8m4XaDCHq2n/+72GypDKEcJmE*)
(*PPNDl8Onk4sWYBFReTZWhWLn3uJR4MUBmhsexvXh4NURoVVDB+ASuosDlK97*)
(*N76J8mIAMePxliOmoU1ocW6nyfOvleetswfGrRL3Shqcti4+61SGY7x48+Rs*)
(*ncchQWrffzHvmEvNi1rmrAJ95XjYTIsZkOIUPjpkXSfh8oQCeYLOMDlrU84c*)
(*yqzPY5KqPOXWfX1ULbZtEhMWh4KtD9XzqRnajInvjDbeus6uRqIX+Jogtiaa*)
(*Sy9Ytu2EVf7r9HWzSFg0HI6jIQp9nB31A+uwdExPZZjhlb3HDl+yC8/Nz8vL*)
(*iA900Dknq6TjX4Z9m0yd/cmqp377bPNNm6wuCS2Je/3AEtXOW8U1Il+OuqHm*)
(*m238bsEVt0okdcRDB3gV1nfC6uFiWMcaXHfaFwwbMSaFVWj406pv//PBcq1x*)
(*JMogQE1//LNKCmbI8AV6TOmivkfL01zx9c1oydkuAC4NkWty5lGO2J2BSyO0*)
(*hD0J7RJfaQUY6MY081NaftlxXkGleJH8ACjwxnjTO+4VE4aDzB4AvcT+4IbH*)
(*wVViuObhUdfX7NGL7sZPXa0RMBAq/c12oxTUyLZSZX8vpBNfbL37qy+2muQR*)
(*h0VNnZ1CcDdt2uWtRXT5S3140u/Vq/2mCZdBLbHVih0aqwA2tTda+8DXm26F*)
(*tLEmMcoDDDw8y9owCT20KxPfEfPk7x1m4k9N3gJYsHIv1d2LNx14FP966/4C*)
(*TBKiuSQhOi6luAUHBoYAfB6HxaAJlEU2hysEjA5hMFmvuxzGxJCrvKT3r/nx*)
(*nH7cu2vwag+Wk3NMa8WMU6K33uPA90uOWWf3i4rt4TphdJZgQkjJM3TIR+HE*)
(*aOFV9t+a58CnWG+ZVWiq6BthsvWTT1YY5IyXlZyWqTpXOrR7TFUlUvrjfZcd*)
(*K4iSzTjFYxJqwpU0Y8XTUvhcLq6vBzstUwyosQtkJI3OZQ81djaxvyzM4Eli*)
(*94xMOzOD1+R7YZPapK55HqU1Oywg2C80tyxMac1G7eB2LOP5Ty2ZIf6Cn/K6*)
(*8Rgic+Tb41GaM4L8gv3C8ivC7i79QffZqKbS7H7Dq5HI4MDDLs+f9716PEJU*)
(*57E/8JptOfXlCYdY1Nn+vuxG7GzMUUHjKlcUuE1HpOr9tXDJMbMC8uQuXjYR*)
(*Xe6kFtVHGajOy83NTon1e3pDO7qD8er75LMo8KqEwICIxAYSi9Jflxjm4x8S*)
(*El+CZHNoxLb8GF//wODozA7xXG98NhXdXZWbmzf6U1hW24aeusYpUFAsZJau*)
(*3T0rBq+JAUSBIZKpdvXa6E9Uldryzd9q/u9uUkhE/P2fDcIr4OPk6W8LvPjD*)
(*N3v0U7qF3lh2ubNZajdaMEcGeBQqb8LIwbFU2S+bskBhFZnKejeRy6x2fPbJ*)
(*Cr1s2jgSBRF95TOleDTvxSWQ8p7e0E+GMdh8JkmsGfHkCEYGOqq7T9wlKpKz*)
(*xApGJgKsD8eWSCmYacPvj7n3y/UJXfOUeh+Fq2YxtUgyqzfy7vrlcy86lw45*)
(*UCh1nvKXzeIaMVRWb7jijysW3fCtF1XMGaTUuMleMktsxdPYPSHXv1v0yRWf*)
(*RhLzxavFxN61zCfSOIMALdtg7bwv5AK7wQLqmKSH5vlU5oy6HTNPf8WvGjkS*)
(*NneNgsci13jKrlty1KwAPZX5AIeCaQjVCWwj9eT7uPj5ePjaG0jfjGh/9RUC*)
(*NFRPloNxVGWCwz/LpG4a+RahuVRUyzPbU6uu6to4xnfT6ajWREeFPzSTXs4i*)
(*9ArY+I48bxVZeTUtXY3bMnKaT3U178icumdoY+cSGF/cP2VdgwUv91Lfs3L7*)
(*CacSKPPmVCBXe0jvX73rtmNBz7uaygef83izvHNSJ/7lVoJOUV2/fN5ZXd+4*)
(*tNy8BF/NM3KuBTDStAqSiSNQKq3lvBqobG61zfbP5gh0lHEkClBiPOdT4/xh*)
(*jzopz0I3tI0OTghxcXdNSyU/PrxRP91bcH7hNeDS9X89aRXZgh1fYsNTtTYd*)
(*1farF2ZpAaqd1608bz7kQIElq607pBPcgqWDP1U5fL/0nHUuSlg2eiBRafV+*)
(*3YgOAihCgArbbxf/Yz/GgaL9OB1FEfriedU2e76cd9ypisKiF+irJsJHOlBo*)
(*ZPKYHE3MSR4aKV7x458182evIh6PTW0Iv7Nv0cbbIe1Tq1LMo2HbY3Uca/mg*)
(*iQYMXyT0ZbtdXa+f9aoQN4CG6M6yMklqqQlQWv6DrF8DqNUy0M0hGnv+e8i2*)
(*iCboExxcR9KTKxt2+D1fAc/n8RijHxWF+sIUwMa0lkVbOOTgmJi26gwv47Se*)
(*/or8SP2AOjCLCFeclU/4luinl5ZuOfokA/XGm+87QXfSjRNbNsqapbW+s0mG*)
(*B+Jub9AJKhp4OfcfJd9s48oF56wzm/uxeHxr+IPjVuld4hnEnyOGQKm0vejV*)
(*TGHzB/nVAh3lFRKlO/Cfj+4lYEAVhZRndPDzOR/N+fRzkM/mnA2CQ413VgBI*)
(*eca/rtX1r0aM40hhV7rsX7NLI7xNZOKCRV1fs1c/StheWOUOu1f+qf1saPkw*)
(*LFx2xS6D+AGS4C9Wme0fy7brJsBEKwYHQi99vWMcB0rXsMbC7/A999W835/k*)
(*kUutboV0U0c6UGikfKs/F5x1LEZhCUQiqi3d6tLvd33rqa8cAHv9pD46bFM3*)
(*tYR94gOuEkzV2zN/0RGLQoJQu+SymK05aW0scNErvq0kxsNIfqdr7ah9GHhE*)
(*ttnTEf4SJrY1TPe79e51rzoNn89j0LCo1giDw2uvR/WAD4RL7Ek3v7Zui0MN*)
(*+Bef3F/oorrut6eFzyUnn8uC18aY39tyyqUITSRiEZ2F4ZbqCmp+VcI3C/D5*)
(*XI5AMJF7KlLdlMLb8G0VKU7GWWKHkQiTrhxZ/5dyROubKjX6boErcTm/Z9cp*)
(*nYga9LvqQBls8Nm61ti3cpwxot7jwOolx62z+kgcMKq+xOJpRh8KnH0Su1vg*)
(*VKF9mAXLjS7sprxcDW0g28fDyd7edvij/M88qbtGZtYvvrGNqaeMZ/+usr3o*)
(*0UwVruThl5qu+WzOFpPil5eFIsMvfHQxsB9MtQPw2EzaCFhv1jL0XsMsc9i/*)
(*7lFINeLlBSj1LptXL74RUI8S/oTL1P7xZ51gkXSpdVi/YsGtsDaRZoNNV/9+*)
(*iUZEJwH8q8Z2zTfz7kR1E4WiBpuq/O1a3WfwkevRm9yvezc998MPAvjYO/O/*)
(*WKVuY3bBsozCHNWA0BFyc7ea51PB0jtCJyw+QemLnbYVr1ga3uUr9aGUv8Td*)
(*8UPwWZQaD7kfFx02LxxOK8WhkStdHj+DC0dsKrq/OdR46XcO1SP3YhNxlU6G*)
(*I9QRLgWR43z5OymfCavgsAm9yeZX1u5zbwbvlE+Blbqr/vCLsUj3oiFqfHS2*)
(*b1YXFo0bhjJQ7q63+3erfLKoTBSf0lfpayq312aE1CF05T6zvxbYSINXpvgq*)
(*G2eLuzJFmHTl/I+7rvnViOw3NGRDSpi1qXtYhK+fl19Gr2Sqr78/cFoi5Y/u*)
(*PKzqUwofejTY+hhnDw+/0FBXS6+EkjbCOyBmmrwPrn0cOE5ijVbQgbJXP7l7*)
(*yGbOINO4QqdFi+/T6GY0WB2DVWa5/oJbFpzyUssAeKKFFMOfMpulppl9BPqL*)
(*bzjjO8sqrS96NVCGJp78ElCi/GpaTB8rUVACgXJBJFAgXiP8Zr8LG1Q98gfI*)
(*Y5o2Lllt3fKzptl9ROHyDUHD+O6OcymyKTezuSPs9qpvzloWIYQFVVilZv9d*)
(*etu9GtuSk97cGarw7cKzduUYYWlhVrHxikW3vRuJrVmpTWRRCCPoQCkAHSjD*)
(*APRcw7Xz5n60VDtlTFlXVv6jeSsNM0fGlSNCLn56xKN13IU8tTbblinE4WZF*)
(*nvBZ1FrPK2sW/KQQ2jnshuezyN3JOg+jhjP2sMj9z4yXrBglUATiozZQ1qHq*)
(*+RccMjzb/vyqfzwbJ2roPAqs0OnefzdZlQpFNgPdEqp3eIOCsNKbQLqUuakJ*)
(*5ElCJ3agOqNElFeEiW6MsJTZqpWGen4Qcm+2k/7Pe92qhqQ5F9MS5/f4oFsV*)
(*i9SdHmS5RzsV9dKJJ4bUkWV5dd/2E84iBwqtpyDEXVs7rpPLY8OrwvysFANr*)
(*3tmVsbNCf7rRqW2n7jgMO1CwhXbqDt7x9Rgej1Efes/SJ6gS/tYLYVSy6sbr*)
(*zildhDFXik5WXb/i+/thzRjGmO01LVK6MHQmhUIutNmxTNW3rBvJmCzH5lRN*)
(*Xg0uF2xKX0w8+SUmaz6ds8WsZKxEqbVc9ZFhLuutWvH3rwDoj7m3Sd45qXuM*)
(*ax5o8vtntax9Tj+Y5hKWovXnstPW6f1l3sZRzagS95MrrjgVIyiC1wpLUtu2*)
(*5LR9LrLc0yCyFVvqevSby64VQoEykKC0ef5ppyJshfvjiHaSUCkhp6goRXWT*)
(*mSPfPr/Gfve8T+VDu2ij1/NVWv/46Z2o/pEaap359x8fcGkZR6Awc/VX/KqV*)
(*Q52FBgRwGZg0vT1frpWyKB62twm+6y92U9x8I/p5Bjg2uT92jEDh0TBlAbdW*)
(*a6UNGdC5FFSx5829193rJzbL0ZF1gRqrf9JIFSZ1YOE64s3OrL/o3wLuREfU*)
(*Bunv2GKQ1tPbnuwQIgr65WBbE6yu/SoX3Pb8uGxsc4zRtU27XStFL5aJqA2x*)
(*uLFXLws3SOpOs3/0y367IvGcTSzB61c69/txyzyhakPrznOyunfWuxKculI7*)
(*Mu3N71z0q4MkyguIZS6X9p5WsM7oFD0VbL7VP48tXEuFiyDQ2U/PPLLyqnjr*)
(*JQpQ57RFyjykeUzIGiXPdOPKhVfcyhEjI1Ao3TFa52wyevBMwQSLXO1zfsVD*)
(*z6JOOI3Nn8T9OUWB0uiyzySXNGLlDiNX/3uBRLEYY/Vi5ep8csavBVJQXj8A*)
(*PkP/5+NWUa1jXPMAtdL56gP37LK8UFuLYG+DI2fsQ3zUdOLbUFQupdxR5q5H*)
(*fmV+sLVZsI/BoVMO4f6qWvGdODqXUmZ74bZncU1BkMXTYF+DfSccooNUNOJ7*)
(*iaT6OA9TpZM/zP3u6F0Ttzwk84X0ALoDzl0KbKeMjkDp8z/5+XmfDsYIedLl*)
(*fwycjYwz7yDFKX50wLx8FpZ38dnUNr+LKz797JeLalZWtnY2dtYW5spy+zZ8*)
(*O3fB19JBXS9G8JcECsDEI9L11D2ibEz8yzu6y2PddBQ0vQrhk0VKMLHtEYaH*)
(*192JFpYDATMqOCuvO+hRK5Id+M4ML8VdWp4Z4Q4hdQxRrR9Sb66b9s8nvOtf*)
(*VCsldKVbK23cYZYrMrdR+8s9jf7ZawEmEGAiaoK0pLce9qoTxxPCx9SHGSpu*)
(*O2KeI3LI45rCnxgfPB8jLObD6M13MX94xqEIWvz1HE5z5LUjsjfNMzqH5hOd*)
(*8Vf/NtbzqxdOE0jF9mdVTJ0LeiS8hlXykPONN9/ySO8eVlHYbamBHqYPjy1d*)
(*8NnaYzf1TC3sBJ1C8DFSld750/zP9xul9xGFm2LTNdZc8ShETKU07OQCpS/L*)
(*RV/2l88//nbfNZ3YVmHy1r5UF2PFvR9/+MH/Lv1bxdyrEPtcgNTZb//NogxS*)
(*UN4IzFK7Az/qhdQgx1hJwbJ1RBKRxmRzeDweh0YkEihDBSUEP9GEP3G44E/U*)
(*UT9xwJ/owz8RBD9xwLcP8Hk8LofNYoM/jJ45AHzOS3MJdOTVL7ZZFIxQZVnl*)
(*Jju/uxWNYL887ejxPfnhUdtJ5v3TRnBLbJbouofgcsAKG6PLa7wsUEAHiqNB*)
(*FpHPZXMET5LEYE8xjELwPDg0PH1oS8FfTDr+RWEoMCCGhCeRmc8PRRmo8NDf*)
(*9btVwfOlREx0c7jlja23Q1uHH59gJxqRIFrYDfBYbDqBNqXuxucPCnPa89EN*)
(*YU+Vd112rySJdsM1hT0xPnBBJFCYAoFi8fCMPSRQwKclrNUDZq2/eP+hZ+Hz*)
(*2p8d8XJHjR+/cwJlkFnmeFA9qLhvuNwx2JPBrizsyyM6BdgrWKznvg9WqfmP*)
(*Z53Tp5ZYY3KBAoYhDfVD7vOeAV4HmO5qzKBS77Bjq0UpJE/eEIIGs+8HDd9S*)
(*+GwYjKYJ6EBZNdKB0pugduyMeRFmvED6Ortt/3c6oOPN6rcvCRQuFdsQrBUy*)
(*nTw/4sFEN0VYSf+mlYYePjGsNNpM4Y5d4cAMHwkHXR+if2L1nycdC5uqgszu*)
(*/aUR/ryuO6E11czw8mmfKtCeQ+3MsjNRPONS/i8XKIz68OvHfvnzjm1OfZG/*)
(*rIKmTlTNiyLyvSmPjmsZuZYNgI8Qk2N6StXUuaj/7Rcog0Cz/1UFj8xOnFix*)
(*NC0+p7cYx3bhBzLsYpvxk2RVofaWtuLYkskEzSwz23c/Bjm1df0QswDQ7Hd+*)
(*nYpHPmysa/7NQGrPT3eTXz1nv0ZAakZOTkq4vfYNJZPIWuQrspzUWm9bdisO*)
(*9+baD5/LwjSmxQc+PvXFwr+fRBeWdJIFKgEd3xmr7zGh933mZ+bQsG3p/kZy*)
(*B1Zv0PLJyclIfeZnr6OlaRFTiRlVsHSakDpyPQwuyVkFPfO2Vrpindb3Qgnk*)
(*oeoiHJ/IGGeBE25sfYiHuZR5DnqmJ3zX6U83vaOhbR8ZYntXy9AmrZkwwmLL*)
(*boq4o2TtnN4Oxpx3RMtq2Ntkd44Tf/72ATAbPG/pRde8tHZnIpBpKnKuz2Js*)
(*bULqEJRJ051ILjCvK0BGPqAFUk/eJMDAs7sbrjkl9YiT0H72EC4S5nJA85Bw*)
(*CSyoYr9ymQgzR3/FFu1ZcceLg+gywWL0fFHfALhcen/va0glLTyzyJgmfFgT*)
(*Pi2xD85nkVBdVcVFlc19ZM7oTs/BNKaHOOh55Dc1pAe7mlvFd7+L6ckki+AF*)
(*kGAdNYLn1YbEjw3EBRhtsZbWPsG5DQ0ZTkb2oWmN+LfdJT8MwO9PM3oUVtJP*)
(*nPoIAfB4DCZnrH17dqGVWV4xzcfOMCEgxIwhlHro2qY3oehvhY4iDrBnD+4E*)
(*dsxWNCMECPCKzA4AwGWxqAQimUZlSUyGvfsAr3peoLxh0WhkIpHKYnLegmwZ*)
(*4iAQlX0wIuutrg7HhPUgWDxImrwFCJr6O9bAhwGgoQwCAgICAgICAgICAgIC*)
(*AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmL2+H/Q*)
(*0m6n*)
(*"], "Byte", ColorSpace -> "RGB", ImageResolution -> {191.9986, 191.9986}, Interleaving -> True]*)


(* ::Text:: *)
(*Image[CompressedData["*)
(*1:eJztnXdcU1n6/3f298f3u7szs1N3tu9357vlu9N2ZmfU0XHGNmMfFR17x4Ki*)
(*KIqKBVSK0kFQeu819A4hQIBAQkJI7w2SUBLS+73hlwQVVJBQQpnJ+3XH1ySE*)
(*3MM993zu8zznOc/5q+PFnad//rOf/cztv03/7Dzuvuby5eM3dr1herH7gttZ*)
(*pwunTm66cOWU06nLXzr+P9Oba0z/+b3ys5+Z/394FjCoxV0FZ0ZxuXIjCTU0*)
(*G99sx44dO3bs2LFjx44dO3bs2LFjx44dO3bs2LFjx44dO3bs2Jk9QEDFJ2JG*)
(*wXbjePL5bpQdO3YWG0ZAL2aNkZKubgJtQDedL9KrOSUeu3d7hqekppqPjKyc*)
(*1l5g1htsZ+aAGrGATibiSTg0At6GYfarwPlukp2fKEbQoOzp6uiiMyhdDdUN*)
(*WL7JkAG0KhbssYwkJ0T53zx4wg86OI0vB3UKUtwPr75xOZdMpdJMB43O4MsN*)
(*s/5H2JkxKgGmoSIlu6Khvbk244GHZ0R8HUNif3zYmXuMgE5CqXgUkV7The2o*)
(*Tb53ze16GmnICBgUAtqIjOA7YZHn3v7DgWzeNL5+RJRef8uzWTvrTbczq/R3*)
(*5sZEB2aihIZhkNsQ6HzmwLUcnGy+W2XnJ4hRJ+cUXd93F9Znso/UQ8iI3e8s*)
(*e9A59gGplXIKPRaHKBkBrUJIwaKIFAquFQpFMYbm/klv1CuGeGQchkjEo1ua*)
(*WnA82SJxghS92MaGKjilXz+sZdb6nTt9zLOAuJDDf4BSwCSQyCQyug3WhCTx*)
(*pdq5v9IGOZfcRaRSyaim2kYMU6zWG+e8DT8+jAatGFuRkNlpEiWDaqA5cPOf*)
(*10XjxvpXcytKJmdSNcAkUPs1Uz+ZQS2mNcVGZZciUKiG7PBbNy9HIfjTiYTN*)
(*AJ2EjalPSIRUtbe3lCUFePh4Z2JNw3w+MShFfD6XL7HyioKafmxJ3K2bIbFN*)
(*LJsbSoBqgMviCcSqqXv0Mnp9YX56aUMbsqEkyveSZ1IxRqicY1mSEIrSsjJr*)
(*WlGo2vygW2duZzex5kMaFxFGUC0g4nutfNiZ/LhBfNmdC0dvlNBUY38wh6Jk*)
(*BHUyDiIvPgXS3qOa/OPPoxGx6yOPX4XQdMNGpaAr2e2TpVer+6b+PTNBxm6H*)
(*RF0OqGXrh40iUlnghdU7AuGiuW3Dc+hlHDQ0M6uomiicVJdAzSAdVZUWk1lS*)
(*RxzQGECbPvcBBa+zpjC7qAnHl09dt3m1Qb7RKY10CTgMkHJObnV0i2vlqm3Q*)
(*zJfAgFy5GlOC7zOJIYCJWb/kyP0KmmiOH4OLC9Ago1cmRj2qJksn+6gR0EsY*)
(*TTkJMWF5nf1a3TNOz5yJEmhQ93bmeXveelDHnIadZLb0higt2dnNTO0wIOe3*)
(*x53/fJXHtMLzM0A7xMM0F5aheLphQz8e4ue8fv8DxHwXOdD0E0tTAt3D0utY*)
(*kpc8x02KxMI3FxXVwrt4/Vw6m07tt6HTrenDlSQH+cRC2tiS6cx8SOlNZbVN*)
(*+F4pMKzuTj2548SN1Paead0300dMqMipbucMqcBhZXvYxpXHg+sY4vm1ixc6*)
(*JqkRIBJcXNyDW3tfcqVMH5Ox2irK8nPqmTKtnNaA4I/98RyJEqiT0hvCXM6e*)
(*S0EPznB2zghoBkl1EW6XLiQi+2f2VdNvg17GboMEXPO8W4CfX0PJAijjtKZG*)
(*uN98lNU9kbmkHSTXx153PuHocicoLMzb1edhYg3VVoMcVHCakoKueMVBsMIZ*)
(*Zh6ACm5Twv0Ld5NKSP1zbCg9BZAxKkOun/TJg/NldkNpMkCDglxxd88Zt0LS*)
(*+G6cEdRLybWRZ7dvcrwTEhYWFOjvcj6JMvYTcyJKoE5Cqbp/eO+ZdLxkGqcZ*)
(*g0mRJJyOwpTE+KRmjkIHvNwB0Sv6uF3FhFmWDaNeLiA35SamZuQh+Uq9bZ0g*)
(*a9EIO5KDXc/4xncIxx27Kn5XVfL965ee8Ci7kjHDvpgIUM6se+jhciuyED8w*)
(*M9kDFTwMtDA+Mh/WxZFO7m1KaNU4JmdodqUWkDHbyrOjIgrbGf1KYGF09gLH*)
(*CGh5MO9vtxxPJ48XtjT9WNxdFPL0Vrx60/O5ieA5ECVQr2DDAh12HEvCzmwY*)
(*mBRJ2oOuKisrrMb1SWR8TDNd8dJfUPR21Dz8Ngk/o7M+1wa9vI/RXl5SWdVM*)
(*7e/v4xE6udOIj9kCk0kRdcfppGcSqn9eH+eansYHHufcHuR1z8w9BBU9+I7a*)
(*fAisiyXqp2JofL50EhublrcvprScIp7JWZ8FkLFQzRU5+XBKn6If30IZGLKn*)
(*nFoDaNBQy1xXrHLMor18hI6PzUXJaFALO+IPrP3Wv+lFx80I6OQ9xG48iS3R*)
(*GfTSHioeR8ARmYM6k9OpGGCQuvFEAq1XYYmCmRSJAY2+cXDrviv3Q0L8vQLu*)
(*nHvQ/PI4v6K3rfrhiklECdQqxRwCjkzvlWu1KhGXgsMRiDTekB7UqyVCuqkN*)
(*JAq7T2Vpg17Ox0ACLx/ZfczdLyTk3o37fndSO5VWXKm5AJSQiv0u7j3llUWZ*)
(*NMxoMwwD6PhbJ855xbXwXhy/BqmAQ8GRuP0yrVraz6WRuruJrD6pGjCoBnuY*)
(*ZAIWT+sVKSzz7uqejlzf08dOnXf3DgwJ8TjpmVjTxZ8knkPJ2x5dWjyJKOnF*)
(*XDoRR+YPqfRqUS+DQsRiSVyxSmd6dArYVBKhC0/vk2ksJriS1RB/df8Bp6t3*)
(*7geFhFw/dDMTw7UnnFqHyUVDx+/6YMXpWuHUf9nWogTqpKSSS2s+O5pOecGi*)
(*AHVKIbaooLgyM9Q5MKe0GYFGtrc0lmdGeaRAm5qbUBg0vLE2I9Y7FikAzHlW*)
(*YkrNI0+3J9z1C2kXvLx9VoiSQTnA7iwtyM9LCb8SXlAJR3QiEbCavPT4+xlQ*)
(*eAsche6E1RQmJz/IwQ0A5pQALqoozONpGwIik7ADVl8um6Pmt8ZdOnHUKaJ5*)
(*OjkXs4GCWeJz8siF+4V40QsKouajEc21+Ql+4bFh2dVNiHZkB7w8MzQ5P7Wk*)
(*AdHR3oFCVmQ9eFhYhe1TGk1f1Jgd4eX+9Eqn1nYJJ1N/K0RJyYHDGqD50beC*)
(*E2KLoK3tHciO5qKke4kl+ZUNpgZ0IJElyffCytvYUq1xWEYqi/XzuPa0DXkI*)
(*jtSeJWwlRoOGW3Pz69/uiKVOOR3OxqIEqAfQcfs/WOJe2fuCmQRqhjjQIK98*)
(*Qlfq6Tc/PhlY2S3SgKqBrrTz73x6Lry4ja0dVg+Sc+/+63Nv2PRSaiYXJYOE*)
(*ha2NCYe0loae+J9Vl6NhFIkOEFFKQp3/tsY9vhbTqxuWMGrCPb7e9qhjOobo*)
(*HANK8PkezgcP+pTQ58N+A4cwSa4Hj10Mq2fIXzCT1LSSjLI6aGncsb2HNl+K*)
(*h1IH1ICWkHV430mHi9E1ZIEMGGaUOu10uxbf3jM9/3NyUVLi0h4Vt6PLgtau*)
(*27/fJw/Fk+lAdWfk6m+PO95Nh3PNzhkxfdNXFwOr6WL7aqkZAuok6Mgt7624*)
(*1TTV+WmbipLRoOS3BG38y9LbDQMv9jGolQs7cpspjGKvFX86mEQ1f4de1tMQ*)
(*svWP3wa0mD0QUCHsiHX6y4p7LdaJLaBV9lFQKOSTo7EyKfzqJ7ezR99BYvCk*)
(*HtlotFIvFfDQ5XA0PNp9/bJLBWzzaFDzO9Nu7/z8cDzafFZDPz7/3pklu6MX*)
(*jJv2UmTkwntO2w9eS8HP/RoSw0BLxKkfDl14COOME3pRMlpwFDyi0NPhiNPd*)
(*IpwlHX+wJXj3D46XU5B8c+eru5L373C+ktJhZU6sqo9Bxo7p7nz/VddDggug*)
(*Y7qb2DOkHJOGLSdWoxms9vSTX+52i2vlKMytFFZfW/GdU0DNyGy/si34q5Xn*)
(*guroQ3ZRmikmecAlbP2ffx2qnKILZ0tRMmlSL8zvm7c/v1437gSY0ThsUMl7*)
(*oUHr//hdItF8E4DKfkyi0z+X+cAtmqQewGddXf7vyxVWTv0b1PJebGMj7MlR*)
(*WRAZcPGj60mj78BakBjm0JgRYwSHARm/M91zx9Jj+XTzQDEMkkoDzqzcGdlp*)
(*1iRgiFoT5rp58/3G0T/BaAQBvfYZdHr9AomAKsil3ge37zwbj51rVTIIm4MP*)
(*7fjh9EMYa9wJQMAwDArhAXv3uHjm4ETmy2XOQNrlfC0e0Wu+f7S0gks7Tlx7*)
(*1MSycupA0UPsahvT3aleX12+dy+9bEx3o5mDct2YGTNAP2zsqXJdudE9upkj*)
(*twSO2kM3rToXXEm1mEYafMK+L4/cLyaNqZph0Ome7WytAbTPwlkDqFOS4vf8*)
(*5o3dRVNLcralKBlUfU2B37z1kWvJi77bYwBlf0fM4T+sDLLYIUatmArxWPa+*)
(*c7E5l8rk+mGz3dZ8cqaQoxXzmINTDzFaFege1vUTIH7HP98bjzcPBlDGgj26*)
(*uv6bu/VmJdRLqNUPXHZsul3NVogEvJHVdkZQLxPgGyozkutwfIlkaFDIxMLr*)
(*K6o6OQuhQoIEl3tj9/fbzmXh5tbfBPtaQg9v23EssIb2ou/2GDk64fDe89eS*)
(*kUKzVWJgl13bduJyUD3D3PkqesG1HYfcw+txLP6AVKqe+rC3KtA9LGn2W73e*)
(*NayGbknq1FMzDi457JWNsyR4KfAJR5bvuVeAZ7A4/UrViJypFVxkbmRuLYol*)
(*EEkkIgGtvTK3BskQqw12ZZoEUCfHPFr36htOZVOKvNpQlAC1GB2x6Y33DqYx*)
(*JhqroFqET3f99wfXoWbLyKiTsmv81/9lRxrdYP7ZID7n2tfLzpXQxKz67GrO*)
(*1Ae8VaJkENNrQi+sXR+MMFtGRmUPIumWw4qzxRxzcF1Cr33outXBq4bAJTWW*)
(*N/NHRMmoE3Tl+Zz/bs+j1kG1WiUXcbHlaT5XfH2LSfM37/UEUIiMu7hnww83*)
(*S2yWHDkuUmTMifUb99wqxA9NpElqUr6rw1mTLcTVWhoK8/1h30WfQqI5EV1L*)
(*K7yy96h7FBTbBm1EkzjTWOlslSgpMbF7vnIKKCYOmnUR4JWeX771ZiKiR2k0*)
(*20lJB9fu9yvCUxqLq7t7BkaEUS9tCdmwwjm4iiyQq9UKEas93+vGSZ9SpFBh*)
(*k/RuORfRShNpDAvE9J4QI6gTomo7X7r2E9CIYd4fvPaPG/VTsdttJ0pGrYyW*)
(*c/q37y4NQk5kjhu1Emap18r/OwqxZJkb5IKWR4f+/F1Mt/nrAGVfZ6bb0t2x*)
(*jbimgpxy2jTyea0RJVDOhcfd2Lz2Wo3FR9QKu7N9HZcdzaaY7Xe9yZWLdN96*)
(*NrkeWV9aDuM8HuVGObM+6vbObYHNTwaAUUKtjLi9+1h81yxnLZkcWjauqbyk*)
(*EJKTX1hYVllVVW05KkpLIHk55TAkQ/S8WGvYdX6ntnx7OADWM4f3tZoKueiw*)
(*9nvXWIRgorvUwKm5ve/4ZZOrZLHhJB1R+/a5eWR3m+c1h1X4jLNnfe6nlpaU*)
(*ljTjWdNZm2KNKOlp+SdX77ubheZb+lLU4LVyw41HjSMaqEBFbD/gl1BRU5AL*)
(*aWf1K0dsc4CVc3j5yZCy0XVvenLyrtWusS0c6awnCAB96NzslMJOgeppPAAQ*)
(*YBugFcX5ubm5RaVVlY9vgOqq4sLc3LycRqpMP0kO8TQx9CCrqsuKcnNycovK*)
(*npzUdBRBcnLz81pYGlDDa0yKSyl7yUI3o17Fyj/1zq+XhXZNQcBtJ0oG5UCD*)
(*z6dv/s6lfMKMaqNe2dtZePtBM9dyCxrUQ4SaR96QkfR0o0E1QIYmpzR04Vqb*)
(*qNOyQKwSJdUAoakoKBk1YgVpxezWioSIGotHMWzUiFhoaHZ2AwqHQrKfukPq*)
(*nvYEX8d1N6tHV+woTU6fx75N3vWzvPIFUAhoqIKwK8e3LN241/1BZkEBxHLk*)
(*ZiWG3Dziet2jiPiCWg9h0t13fLv1XEbXHDpwgia/g6s2HL9XQ5/w6aEXorPS*)
(*y0qQPSNWkIRclZhfDqOJLWMdGCLVlTVA6xsacYzeoWlNv1kjSroeeGRMRQNV*)
(*NGIFibpyQrOhGIHCcgMCA5jC3IZWOLQexxMrn8hiX7XbF3v8c/Bj0ix6Chw/*)
(*2XW/mDIwyxkCgLDtYUBQGcFkJ43qjIHXXl4acf7zTz743u1hRnYe5PE9kJ4c*)
(*cmnXR24FLKXOJqKkZzflFwSd+vvf/r7LM/nJSfML8lMT/M9v/9f1SonJVgIG*)
(*OlN8fZJwEw5PUCtDBi559c1jkCmElWwmSkatlJp5/PV3lz7EveShZzQaDVrD*)
(*M6+0hmd+rNNqp20ka8R0bJUXdJI/zQgagdFVykYQNOjGLloGQVCn041tg74P*)
(*m+d/ccPpfJpu9K2ubB+ndYdjOq3RAc0ghYGro1ub365m1gWcXPuFw/Uy5pjB*)
(*quG1RidG3S2hvXB5dMw6X8eNXx3yrePO5EmuGyRjyUTqoFWXX0PKPbP9m61X*)
(*ElD9LzHPAD0AAuDoK70BAMZ83KDX6555Y2oIEaE1nWj+JD1g6mvjaJwa0Ome*)
(*DVvrTZ1t6vLRNxQtAWs23E5t7x2tnCJvu79y+akHTVauNRZhszo5YvXkn5Xj*)
(*Y8+7JKCEiheiVYPlzr976+8Xi7ljw/agpMl3mUclX2mzMk9GYd6+V37+V8+W*)
(*sYEAUNdXc+ujWw2W90CDqP3e6bMF489tWEwlbu7JX/7630Gd1t+LNhMlk50D*)
(*8/v3G+8dzuOP85tzg0niVJI+yWw/zsTk8tBrDgfiME9cNaNagM7zO3fofFKX*)
(*VSkZIlx2ceLpUoZ159P3tMZe2PDl5rMZlki8QaNRK5UmpRjC19SWZTSPM906*)
(*gE68vP3rbecyu2diKslx2XHZaYUEq1IhhC1+h9Z8feBuCWn+0rkMioEhpVo7*)
(*uy6Vujtm16rLUSYBevK9wEBjwO6tFxIbuTLrHpf42CUP6kmDk8YfBps8D13I*)
(*xYlUL/wFKvjdz975zYFkklRjVkbt0JDGoqS01POxXXKNrbLMjfJa1z+88tqJ*)
(*0sd3tUYs0pqXYRiIcY7RxMefMShxsdvXBKMnuE0ArRQe8MFrb54qtn75j61E*)
(*yaiTs/NdfvnWby9Xz3/sd1YxypnQqNsOowElvUKIKYu9fcs3FsG3Tv8GcGmF*)
(*8UesFCVgoCvjusOStYfD28z3hlZIJHW3mRcZK3vodCK2Z5xTykklt/Z/ve64*)
(*f8s0cvyfIsVmxGamWCdKBlrZuZ1fLDvhV8f8ceU8jwSUgsuog4+NVAW3NenO*)
(*RbeEBppYY6VNh43+MKyOMKkoyRs9lzpn4wdfzPHSEqPW/Ob11WEdIrVZf2To*)
(*7BqmRXyFreXdIq3NZgE1GP+PXvn5tykc8wsjKOlIqeBYfInepqLuJ5Fr0KBA*)
(*hn62JAw3fsebNKI7dvuv3vgihmT1eW0lSqBGSojf++rb/3sP/iO6SwGdeoiL*)
(*KA52PbD8RGIbh82g4jtaaouLc3NzC6Ekq8vzTkmUZKQy70NLPtvsktbKZDHw*)
(*sPSE5JhctCWPCzSOnzCjY9b4Oi5bvv9KDWsGoe6piJISm3l6y6frnMNbeD+e*)
(*xWE6mZCHTXX+ZJ1bWCWSzGGSMS219ZVFGfEZtQSB3HqfyTpRUmFCV30VCusd*)
(*x/xi5+x9782/Oad3EBkcBgmedPZKFlVukUSDLXNQjPTEta+88v71SgaHw6Hj*)
(*G2KOXcx9vLBr7HkBXV+p6y/XpDHH/xK9kp1z5Bevv3MfYfWdYTtRkmCjtr3+*)
(*7pro7gWQuzNbADqViN0JK8qIfFTUSmLQKQQMHFpdCe/iSacSmp2KKKmZ9WGn*)
(*1v1nnVNkVRexu7Uo/K7f3QfwScLp/NbAc98t2XO5nDaDiz8VUZKhk05uXLnd*)
(*LRX9spDSIkMn6WVjymMCkyANaALN9ABqh5ZW1KOYA+qpZcpaJ0rCkrN/dk7H*)
(*jmMoDZZf+Ntb/zgWXofEEojocp+tmx+ihtQ2F3+jMO/Qa6/81Tm9k0gkEJBF*)
(*t9asi6GN8znQoO6I+OTVO03jWx8Gtbj62i9ef/uu9YX8bSpKO974ze4s9vi/*)
(*CwCAQCDo/tHBYrH0+ucednrFII+IaG9/clRn3PG/uTk4f/SddjSJKRgvGqPv*)
(*aY27uOHLjadT0WKNRtWLzM/PjKjk6IdBvVKpkinHFx0BIvD8xs92uRaTp6CV*)
(*BrmQTeocbVJdure7123/rIbRliOJbOG4gRSLKG3a5wEhTOCsSyQSKpU6350z*)
(*+8jlcqPxOZtJzuvu6hzT3Wnu71+KyK5uHNPdBIFG95yqUJPX/PF2AU2ied4C*)
(*exxQiscIJSqNRtEduT+gUWAObgOqAfFIbMm8hhPPlY9b7knKQCHbx5z6+QPb*)
(*oxrf5lPUuf7+lddOFPI1Go1aJe0M3noPYQ5uGw3KPtGYAW80aMlpe37lVDJ+*)
(*gqRZlG7+92tv36izep3WvImS6S+trq72+tGRnp4ulT43MnWyAXZ3Mxz+5ChL*)
(*8bjnvjEge/QdeAeONl69dWAAm3HDYcmaw+EjVXfVfXQGBcNRDRtETEI3GjNe*)
(*RGn4sSh9sO18Nm4KC/YMUj4ThxhtUlXynSu3b95Lqx1teWs3gy8ZT+cmFSUC*)
(*gRAVFTXfnTP70On0Z+bqLBeDg0YhxnR30pW/XghNK68b093Y3hcC8t2PPvrD*)
(*XQjrhWkZLcEcUFoT1j44EgCXIEu7+jUmW01LqSzBii0RJQOr2PlGAVWlG8eC*)
(*k1DbWuFjTv38geIqxxUlDcb/w1d+/t1IQGnYaBS35qPF5oiSilACGTuDYhIl*)
(*auqeXx3I7R235y2i9F+vveVsfaR73kTJZE6YHjQFPzpM/a9STZJBab37JiOX*)
(*eR9a/tXuu9CRREgjaMYIKrgd9WWQGuwEydMWUfrY4UL+i0lM1jNl9+1lotTT*)
(*01NbWzvfnTP79PX1vSBKz2Od+8ZO2/Enl0yC6Pn1Neycvb9989936/hP8sd1*)
(*hmGzDgmawsOKaTKtRqvVMDN2v3E0mSiS65+32qaPOaD0808ejCb0mM5ruv+0*)
(*3LrAwJKeMRa6yX3DPFz5q0vV4ydtPxalt12rrJ7xsqkoff/rd79MsD7o/pPB*)
(*alFSMaFhp9Ytd3AvGTuppZfy4EXpSdnVrAn0Auxp8T+7bs5jSst2uid3zfFW*)
(*DosB60RJCfP4H4dHMOFzW78MlF/429v/uFjMkI3NUFKyGoM9Axp6TF6cUipl*)
(*5p/+48ogKLdvaPZEqc8cUHrfo3VsTMEIyKg1Pu7+bc8kvoB6Wb3nbz6LJYz/*)
(*RQZ1f7nbAokpaaXk5H2vvfP7QOuD7j8ZrBAlvXyAR2wpjr2x+z8fLd1yKwXa*)
(*hkCYj2ZYZV6cz1Xny76JsAkrMWrp1d7Hvlq293olfY5ESY3LPrP1g/UuoYje*)
(*H0+ge7awMiWAnbn9P+65FPETU0nR041CQqOOf/jGL9ZcTa+FtSJG7gFoRXq0*)
(*5wmHQ4Ft/SqT76bTiBtuf/zF/freIaV2NjRJxka1Ieoe/PC7V17Z4FP5+KSm*)
(*o740Kdz9yPeHI/DPrKk0eW+0tL3vX60fPxfYqFcyMw//4vU/e8+/KA3rFLzC*)
(*i79663e36m1Rh8hoshklAjabzenhi2w/ETHLWCVK/Rx8Y1VB8kPf4IdxxbUt*)
(*8BbLAasryYoLCYrOqqGIJhz+ljylNauPBDfNRCKmIkogo8Jl15KvTwfC2DZY*)
(*pApoJP0Cnqm3+SKZZvGtzbdSlLTU1B+2+NUwzUUvzci5Xe2ImuwHPl63kyDQ*)
(*pqaWx/dATUnSQ687AZVE2Uis3ECK/ebjG5U9qllK7JYx2+EtVRkBnp6e6aVP*)
(*TgpvgVcXxobdvhMEZT3zoDMCOk7eieWnSidIiRvJU/rlr7+OsH4a3pYZ3Q33*)
(*P3rzvVOFs70PktGgEjM7yisROBKNhGnOT4p9UNjKXchbUD+PgtfaCYtHzSSz*)
(*8aUMYpIub1+59WwaZiaJq9qeNigC3mHdbmsC+L2Dq1cf9ql4serxzACkzA54*)
(*KxxBoFDw8LKs8KS8eoKNlufbih7orXJc7+S7Mxl4RU7Hvavokqltw8svOP4n*)
(*p1ymQkSFE8QG2yzOnRAjoGLlOO28DptoaRuglbYEfvzqm8fyrV/8ZjNRMvtv*)
(*GUdff/fLR/jZTVQC1IO0hojQqCrSoBbQiMlVD51XfbnXp4o3T2Wpp4FRp1TJ*)
(*xHJbbTqi5zTcO7V16V6vSsaMrolBKVMp5OPN6LyImpRzZvuq768mdQ7Mqv+m*)
(*YlZkJySVttCG1Dplb0fyuW1b97qnt3MVi8g6BmRCsVJvzZq+fmTEtZupnXzl*)
(*VMxBZsbub0Kqcc3lkEJk/2S7js0uJodlABHqdiWbPtGNZtSreAXOv3j9U2+4*)
(*9R6TTasEQL0+eet3rhWzuOeNOcYnxORcWbbjcjzanBdhVPXhsi59+OclRyDs*)
(*2TzNYkbSnXV914YNp1ORE1Y2mn0EjfcOfrPB8X4tYzb3jFSTs12cHI+HVxAs*)
(*W8gZ2MWu65d+diqqnrkIKqZPA0N/R2L0w0xkj8r6/EwltTyvjUhtbcYPauZY*)
(*krQcWOzDsPyJplyHLTWvUSFfvfrG0Ywp1EOznSiBWhkl++Rv3/0qfCqlVCY/*)
(*p3qQVOG758ApH5gl5V0nYlR6rfzdPz+P7Ta1Rz3E6EZjCWyJTqccZBHQaCyW*)
(*wBTpQINmSEjGojFYPLVnMT1kp4OWU+9/esuaA/drp1EXb9qoKfkXdqzb4ZaE*)
(*7JvF66tmVwVcdTwcBOnotbiFoqbA75f+frdvHlFkrnbFpXajcZxBuUYt4tEI*)
(*3SgUjtUv04A6JZ9BwWFQGHLvkO2W0NsIGb22tIUyxRVtNl1uMhGgTtxdmQ+f*)
(*sKzssMVQ4kCc3vn1FwHIKTyrbFt5EvVg/Zu/PZw3flbVNDEaNDIuHo3jys03*)
(*PyDvaYs5/s/3152p5alErI6C7KKSlGCnexmF9S0YdGdrY3F61M3YigZYA7ob*)
(*2wYrT43zGdmx6UcL2IdKcN33ncN1CHFOtzqQdEQ5frfx0N0S8myG9wAJl0Ig*)
(*cQZGSnYo8OlOq1d86ZrUxFMqWM0NjdDcmFv+UcHplU1tSAymvTzNNyYnBVKF*)
(*QHaguzBVafcCIXXEwWlU1p1ftDKpahGUATcaFJLJ6sRoxI2+H7/6f5eqprJN*)
(*tW1rdAthfl+9/aF7va0KBYDaIUp1yP61m13TMH1DPcTq0JDCzvqIE39Y7hrd*)
(*aN4tScKGRjr/ZblrfF2XQDcs57XGeX6xNmg0+cIIgnrNM2h1z+f/LzKk+Pyb*)
(*x7dvccvAzKHzNmyubtscdGjrTqfwBraNlmDrhc1hznt2u4RXkAY1iu6MhJLm*)
(*tpIHWzcd2nsnu4Nr6m1NV/yWzceOeKa2sEUqcJic+8O6i14F+NGCrYBOp322*)
(*u/WLYPAvXkwCgY3e8Oo/Tudzp2LK2Xg3kx7ovZXvLPVtt4kqAeohUn2Ui+vl*)
(*sFq6fBhQigWYSgS+M/n6qk/O57PNMQhtPxHivfXDPSM7kxjEtPKQ0x99H4F6*)
(*akqCBu0gs70qPzSpiSKSSMT9vRRUfXlJVZdwsdY2UFLKfZz2ObilzbEmmXOM*)
(*GwMOOhy4EN1iZQWXqaHkwaMD3NzC8xA8qd4cSYHjmYz2zPOrD16OgDItZnN/*)
(*3a3vvj/lUzZSf1veHr5+/Xlf06unTxmdQkSqj4wqrMawhEMSST+nG1aUW4Nh*)
(*zcHy1p8iJj+aknzgvX84FkwtkGDrfd96m/zX/fnrm42znuhr1CuE3ZWRYVHR*)
(*9WTJ43r+w3rlABHiteGjAzkMy25JEkZdxOnPNz3osOyWJGU3RbquWe3dMBp5*)
(*Ny/YQMTf+WGpayFdqdGo5CI2qjzprscd/waurSbHbIqSVhlw8dj+GzlY8Zxn*)
(*MRr6mkNP7Nl7MbqRO5vBbjOAmFybE++fVtnGGXo8YW4AhkF+zbUN2y+H1dAt*)
(*W/kpOh86bDrnA8EPmDVJg085uvaEV3aXYPTmBHSskksr9nvEwBlitUYj66O1*)
(*pt+/6hxV2dWntCd9zjagXknNOPz+f84XTXEs2XyH3H5k1A//+sStdio+5aSY*)
(*FKmfVJeWUVDcwpObazcN0uBIoXmjeEZVyOF/bYvBmkcFqOhFxF3/5vObNeZ5*)
(*OoOU3Rjlsn7V9SquUsSji0aejYZBcnno+W+OZdOfVoXvJ+YHu351pnBGtWTn*)
(*B1BKKvJ1OXHcq4yqmIdBBoo74y/sPngpHMqeTVUCxKTmqoK0IgRRqNAN6wWd*)
(*WLag3xz3lrQGb/n+om8x0bJ5go6Sd+JrR49EZK9ltyRCysm1B+5moKgMZp9M*)
(*9jghUdEWtmXH7VgY++kuUNKW4K8dfJMRvPGXpdqZNqBO2p3ww/tLvRpe2Nti*)
(*EmwsSuZ0JQLk/DcfH8xjzZpND2gkDHhKaFhELpzEZLKYVExrbbx3NsNkC3Gb*)
(*I88vX+nbal4baFQLsVm3N3/mCLHsliTnNCde+naTRzWFT4ZBoEKL5AASBjTq*)
(*2kaHqM6nowgQUYrvu37xXRx20ZlK+kF0mu/ZI67BDbzZNlWsREaD3D26/5I/*)
(*hCyZLUlXctuKkkOjc6sRODrL1N3ovOA0GIpmsn2VXUlHvnXyyUQLzT0F9FS4*)
(*rd3p/qiBpTCacwnSHL8/6p2NJjaX1eKYgpFgtxqXeGijW1gVRfS0dWrUo9Wf*)
(*Xg6uos+1t/tjB9AOtgWs/XTDg6ln8NpalEa27g77/t8bA9pnxVgy6pVCVNb1*)
(*bUv+s37PoUOHzcf+3ceO7w9uVYJKQWfajTUrXEd21NUNUksCjnyyL91S398g*)
(*ZTYku393LKEeVVdYBhsxKI1KXlvynS3f3W966tEZFVx4zNUNK52LFlsNRVDO*)
(*qo+54XLhdj5WPG+F9Qx9rRHnj57ySETwZ0MXAQmp5N6xLevXb9l14PBId+9c*)
(*ezaivEtoGNbTIec3Hb6Z1DriLA42+m/Y4R5WTZOa1UXZHX/o+P2IvNL8ouJ2*)
(*pmDEOQNYBSe/PeuXh+t7er8CzALHZZuvJSMmqipkZ1qABjml2GXdimsl3Kkb*)
(*IzYXJbMjLyeVe27ddiiZNAuTxSaRGyBWx3o/Q1hUfFe/ySqTMJHlYWmPp/z1*)
(*cmFXfUpkLdNyzxp1Mj4JnlsA7yJjOrmPp980JlvK/+Byt8qnmxsY5KyGpKu7*)
(*dlyv4C0yQ0kj7EgOuXTWK6FjVuRg2sgY1QHXHC89zOsWzfwKAlIKLCs2+Nne*)
(*hsAtVfj1QlR6RnUDuX9ETiSk8oQiGKZ3ZJdiYIhYXQ5vaYPDyTzRk1UpfXU3*)
(*Vh32TUb1Pl0Ko6Blnd2y724Wkv9iwUc708YIaHsbfddvcUyZePOllzAHomS2*)
(*5IYIpR7bdp+A0Gw7qTWyWxL49NVzuyUZQeCZNwyDlIqxASWTqjEQufdu3vKG*)
(*kK3almThoBnsLohxv+IXBefMd8gWlNEq/G+cuhlTQhHb1tgE9AAAPF0Yb96x*)
(*aewEvxHQP7t9kqItdIvD7VgY63FASSfGF4bfcPYrgHMnX5hmx2pMY5DfHnHo*)
(*wIFE5FSjSSPMiSiZZUlCqA444uKa2b0wNjcxXTjFALkx486pVUtvQwhMOoWA*)
(*aq4szcmB5EGqUb2LaxEDKOe1F8Z4+kVmoXvnW5Is7ZEw6iMC3TyTSon9CyO1*)
(*AlCLBbQ6f4dPj92IrkXRmGQsvK6sqDgrNbsMyRCpfkRl5Ocd0KCk1/pdcLlW*)
(*gBNPcynHHImSeX5QxUWku1266gdjL4B7wCRKShET21iSGZ3Q2M3mMOnkLgQU*)
(*Cu2g9i2ehb0jaAYplVnBHmHJdZT5iyU9j1qAyY70uRqV38KVLgCZBDRDfUxU*)
(*SXxkUXUbgcbm0AjtjdW1bfhemc02TftJYgT1fai0K25u4bAZpIXMmShZHM0h*)
(*MjTmdmhMNXUxFRpZ2GgGSc2Qh3EZRRi+ckGNL0DCbM5MDo8uQzDFdufoJ4FJ*)
(*kvo7U0Lu+5fgZ/R4nENRGrbYJzIeuq7pR7rGez7QijhUQhdFuLAUaQRAxu3u*)
(*xFN4kkVV/sjOdDGCBjGhtpE8U4N9bkXJjh07dibBLkp27NhZUNhFyY4dOwuK*)
(*mYvSjv/6xYoDbu4WPO541y2EuTU7duwsKgCtlFgxoiLubq5nHL6ZrigZAZ0I*)
(*W+A/SsiDiJaeBRhxtWPHzoIG0MlpsDFSEhweWTobK0Ds2LFjx44dO3bs2LFj*)
(*x44dO3bs2LFjx46dhcz/B7Q9Kec=*)
(*"], "Byte", ColorSpace -> "RGB", ImageResolution -> {191.9986, 191.9986}, Interleaving -> True]*)


(*Integrate[Ett/(Ett+"\[CapitalLambda]")^2 (("ms" + "ESMt")^2+("ms"+(Ett-"ESMt"))^2),Ett];
Simplify[%/."ms"->("m"^2+"mD"^2)/(2 "mD")];
Integrand =Simplify[Simplify[(%/.Ett->(2 "mD")/(("ESMt"+"mD")^2/("ESMt"^2-"m"^2)-1))-(%/.Ett->0)]];*)


(*NumIntegrand[mDt_,mt_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ,\[Xi]E_?NumberQ,params_]:=2/\[Pi] ("\[Alpha]"^2 \[Kappa]^2)/mDt (E^(-"\[Beta]" "ESMt" + "\[Beta]" "\[Mu]")/aH["\[Beta]"] Integrand /."\[Mu]"->"m" - 1/"\[Beta]" Log["Qt"]/.{"\[CapitalLambda]"->\[CapitalLambda]["\[Beta]"],"Qt"->Z1["\[Beta]"]}/."ESMt"->1/"\[Beta]" \[Xi]E + "m"/."\[Beta]"->\[Xi]\[Beta]/"m"/.{"m"->mt,"mD"->mDt})/.params
ESMIntegral[mD_,m_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ,params_]:=(m/.params)/\[Xi]\[Beta] NIntegrate[ NumIntegrand[mD,m,\[Kappa],\[Xi]\[Beta],\[Xi]E,params],{\[Xi]E,0,\[Infinity]}](*extra factor comes from jacobian*)*)


NumIntegrand[mDt_,mt_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ,\[Xi]E_?NumberQ,params_,l_:1]:= Module[{Integrand,E1ms,E1},
(*l - == 1 => energy transfer rate integrand, == 0 => interaction rate (over Subscript[n, D]) integrand*)
 E1ms=Integrate[Ett^l/(Ett+"\[CapitalLambda]")^2 (("ms" + "ESMt")^2+("ms"+(Ett-"ESMt"))^2),Ett];
	E1=Simplify[E1ms/."ms"->("m"^2+"mD"^2)/(2 "mD")];
	Integrand =Simplify[Simplify[(E1/.Ett->(2 "mD")/(("ESMt"+"mD")^2/("ESMt"^2-"m"^2)-1))-(E1/.Ett->0)]];
2/\[Pi] ("\[Alpha]"^2 \[Kappa]^2)/mDt (E^(-"\[Beta]" "ESMt" + "\[Beta]" "\[Mu]")/aH["\[Beta]"]^l Integrand /."\[Mu]"->"m" - 1/"\[Beta]" Log["Qt"]/.{"\[CapitalLambda]"->\[CapitalLambda]["\[Beta]"],"Qt"->Z1["\[Beta]"]}/."ESMt"->1/"\[Beta]" \[Xi]E + "m"/."\[Beta]"->\[Xi]\[Beta]/"m"/.{"m"->mt,"mD"->mDt})/.params
]


ESMIntegral[mD_,m_,\[Kappa]_,\[Xi]\[Beta]_?NumberQ,params_,l_:1]:=(m/.params)/\[Xi]\[Beta] NIntegrate[ NumIntegrand[mD,m,\[Kappa],\[Xi]\[Beta],\[Xi]E,params],{\[Xi]E,0,\[Infinity]}](*extra factor comes from jacobian*)


(* ::Text:: *)
(*Interpolate over temperature, find total energy transferred to dark sector at recombination*)


(*InterpolateEtransRate[mD_,m_,\[Kappa]_]:=Module[{n=13,Inter\[Xi]\[Beta]s,InterPoints,RateLogFnof\[Beta],\[CapitalDelta]Etransfered},
(*Interpolate to find the energy transfer rate between e e decoupling and recombination*)
Inter\[Xi]\[Beta]s= Subdivide[Log10[m/Td],Log10[m/TR],n]; (*points to be samples, we have made \[Beta] dimensionless (\[Xi]\[Beta]=m \[Beta])*)
InterPoints=Table[{Inter\[Xi]\[Beta]s[[i]],Log10[Abs[ESMIntegral[mD,m,\[Kappa],10^Inter\[Xi]\[Beta]s[[i]]]]]},{i,Length[Inter\[Xi]\[Beta]s]}] ;(*Abs since numerical instability at early times*)
RateLogFnof\[Beta]=Interpolation[InterPoints];
\[CapitalDelta]Etransfered = NIntegrate[Tdt 10^RateLogFnof\[Beta][Log10[\[Beta] me]],{\[Beta],1/Td,1/TR}];
(*RateFnof\[Beta][\[Beta]_] := 10^RateLogFnof\[Beta][Log10[\[Beta] m]];*)
(*<|"f"->RateFnof\[Beta],"LogLogf"->RateLogFnof\[Beta],"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints|>*)
<|"f"->RateLogFnof\[Beta],"\[CapitalDelta]Etot"->\[CapitalDelta]Etransfered,"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints,"mD"->mD,"m"->m,"\[Kappa]"->\[Kappa]|>
]*)


InterpolateEtransRate[mD_,m_,\[Kappa]_,params_,l_:1]:=Module[{n=13,Inter\[Xi]\[Beta]s,InterPoints,RateLogFnof\[Beta],\[CapitalDelta]Etransfered,Td,TR,Tdt},

Td = "Td"/.params;
TR = "TR" /.params;
Tdt = "Tdt"/.params;

(*Interpolate to find the energy transfer rate between e e decoupling and recombination*)
Inter\[Xi]\[Beta]s= Subdivide[Log10[m/Td],Log10[m/TR],n]; (*points to be samples, we have made \[Beta] dimensionless (\[Xi]\[Beta]=m \[Beta])*)
InterPoints=Table[{Inter\[Xi]\[Beta]s[[i]],Log10[Abs[ESMIntegral[mD,m,\[Kappa],10^Inter\[Xi]\[Beta]s[[i]],params,l]]]},{i,Length[Inter\[Xi]\[Beta]s]}] ;(*Abs since numerical instability at early times*)
RateLogFnof\[Beta]=Interpolation[InterPoints];
\[CapitalDelta]Etransfered = NIntegrate[Tdt 10^RateLogFnof\[Beta][Log10[\[Beta] m]],{\[Beta],1/Td,1/TR}];
(*RateFnof\[Beta][\[Beta]_] := 10^RateLogFnof\[Beta][Log10[\[Beta] m]];*)
(*<|"f"->RateFnof\[Beta],"LogLogf"->RateLogFnof\[Beta],"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints|>*)
<|"f"->RateLogFnof\[Beta],"\[CapitalDelta]Etot"->\[CapitalDelta]Etransfered,"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints,"mD"->mD,"m"->m,"\[Kappa]"->\[Kappa],"params"->params|>
]


(* ::Text:: *)
(*Interpolate over a given mass range*)


(*InterpolateTotEtrans[mD_:{10^-3 me,10^4 me},m_:me,\[Kappa]_:1]:=Module[{n=Round[Log10[mD[[2]]]-Log10[mD[[1]]]]+1,Interms,TableofInters,\[CapitalDelta]EPoints,TotLogFnofm},
(*Interpolate to find the energy transfer rate between e e decoupling and recombination*)
Interms= N[Subdivide[Log10[mD[[2]]],Log10[mD[[1]]],n]]; (*points to be samples, we have made \[Beta] dimensionless (\[Xi]\[Beta]=m \[Beta])*)
TableofInters=Table[InterpolateEtransRate[10^Interms[[i]],m,\[Kappa]],{i,Length[Interms]}];(*table of interpolations*)
\[CapitalDelta]EPoints=Table[{Interms[[i]],Log10[TableofInters[[i]][["\[CapitalDelta]Etot"]]]},{i,Length[Interms]}] ;(*Abs since numerical instability at early times*)
TotLogFnofm=Interpolation[\[CapitalDelta]EPoints];
(*RateFnof\[Beta][\[Beta]_] := 10^RateLogFnof\[Beta][Log10[\[Beta] m]];*)
(*<|"f"->RateFnof\[Beta],"LogLogf"->RateLogFnof\[Beta],"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints|>*)
<|"f"->TotLogFnofm,"Inters"->TableofInters,"Points"->\[CapitalDelta]EPoints,"Interms"->Interms,"mD"->mD,"m"->m,"\[Kappa]"->\[Kappa]|>
]*)


InterpolateTotEtrans[mD_:{10^-3 ("me"/.CosmoParams[]),10^4 ("me"/.CosmoParams[])},m_:("me"/.CosmoParams[]),\[Kappa]_:1,params_,l_:1]:=Module[{n=Round[Log10[mD[[2]]]-Log10[mD[[1]]]]+1,Interms,TableofInters,\[CapitalDelta]EPoints,TotLogFnofm},
(*Interpolate to find the energy transfer rate between e e decoupling and recombination*)
Interms= N[Subdivide[Log10[mD[[2]]],Log10[mD[[1]]],n]]; (*points to be samples, we have made \[Beta] dimensionless (\[Xi]\[Beta]=m \[Beta])*)
TableofInters=Table[InterpolateEtransRate[10^Interms[[i]],m,\[Kappa],params,l],{i,Length[Interms]}];(*table of interpolations*)
\[CapitalDelta]EPoints=Table[{Interms[[i]],Log10[TableofInters[[i]][["\[CapitalDelta]Etot"]]]},{i,Length[Interms]}] ;(*Abs since numerical instability at early times*)
TotLogFnofm=Interpolation[\[CapitalDelta]EPoints];
(*RateFnof\[Beta][\[Beta]_] := 10^RateLogFnof\[Beta][Log10[\[Beta] m]];*)
(*<|"f"->RateFnof\[Beta],"LogLogf"->RateLogFnof\[Beta],"\[Xi]\[Beta]"->Inter\[Xi]\[Beta]s,"Points"->InterPoints|>*)
<|"f"->TotLogFnofm,"Inters"->TableofInters,"Points"->\[CapitalDelta]EPoints,"Interms"->Interms,"mD"->mD,"m"->m,"\[Kappa]"->\[Kappa],"params"->params|>
]


(* ::Text:: *)
(*Neff constraint and dark temperature*)


(*gstar=2 (TDRt/TR)^4(* []effective gstar for dark photon at recombination*)
\[CapitalDelta]Neff = 8/7 (11/4)^(4/3) gstar (*[]*)
constraint = 0.1 (*[]constraint on \[CapitalDelta]Neff*)
TDRconst = TDRt/.Solve[\[CapitalDelta]Neff==constraint,TDRt][[4]] (*[eV]upper bound on TD at recombination*)*)


Compute\[CapitalDelta]NeffConstraint[\[CapitalDelta]EtotDict_]:=Module[{gstar,\[CapitalDelta]Neff,constraint,TDRconst},
gstar=2 (TDRt/"TR")^4/.\[CapitalDelta]EtotDict[["params"]];(* []effective gstar for dark photon at recombination*)
\[CapitalDelta]Neff = 8/7 (11/4)^(4/3) gstar; (*[]*)
constraint = 0.1; (*[]constraint on \[CapitalDelta]Neff*)
TDRconst = TDRt/.Solve[\[CapitalDelta]Neff==constraint,TDRt][[4]] ;(*[eV]upper bound on TD at recombination*)
Print[Plot[\[CapitalDelta]EtotDict[["f"]][mDM+6],{mDM,Log10[\[CapitalDelta]EtotDict[["mD"]][[1]]]-6+6,Log10[\[CapitalDelta]EtotDict[["mD"]][[2]]]-6},PlotLabel->"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[Energy Transfered to DS] [eV]",AxesLabel->{"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(m\), \(D\)]\)] [MeV]"}]];
Print[ContourPlot[Log10[\[Pi]^2/45 TDRconst^3/nDR[10^fDt,10^(mDM+6)]/.\[CapitalDelta]EtotDict[["params"]]],{fDt,-5,0},{mDM,Log10[\[CapitalDelta]EtotDict[["mD"]][[1]]]-6,Log10[\[CapitalDelta]EtotDict[["mD"]][[2]]]-6},ContourLabels->True,FrameLabel->{"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(f\), \(D\)]\)] []","\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(m\), \(D\)]\)] [MeV]"},PlotLabel->"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*FractionBox[SubscriptBox[\(\[Rho]\), SubscriptBox[\(\[Gamma]\), \(D\)]], SubscriptBox[\(\[Rho]\), \(aDM\)]]\)]"]];
Print[ContourPlot[1/2 Log10[(3TDRconst)/10^\[CapitalDelta]EtotDict[["f"]][6+mDM] (1+\[Pi]^2/45 TDRconst^3/nDR[10^fDt,10^(6+mDM)])/.\[CapitalDelta]EtotDict[["params"]]],{fDt,-5,0},{mDM,Log10[\[CapitalDelta]EtotDict[["mD"]][[1]]]-6,Log10[\[CapitalDelta]EtotDict[["mD"]][[2]]]-6},ContourLabels->True,PlotLabel->"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\[Kappa]] [] - \!\(\*SubscriptBox[\(\[CapitalDelta]N\), \(eff\)]\) bound",FrameLabel->{"\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(f\), \(D\)]\)] []","\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(m\), \(D\)]\)] [MeV]"}]]
(*Print[ContourPlot[1/2Log10[(3TDRconst)/10^\[CapitalDelta]EtotDict[["f"]][6+mDM](1+\[Pi]^2/45TDRconst^3/nDR[10^fDt,10^(6+mDM)])],{fDt,-5,0},{mDM,Log10[10^-3 me]-6,Log10[10^4 me]-6},ContourLabels->True,PlotLabel->"Subscript[Log, 10][\[Kappa]] [] - Subscript[\[CapitalDelta]N, eff] bound",FrameLabel->{"Subscript[Log, 10][Subscript[f, D]] []","Subscript[Log, 10][Subscript[m, D]] [MeV]"}]]*)
]


(* ::Section::Closed:: *)
(*End*)


End[];


EndPackage[];
